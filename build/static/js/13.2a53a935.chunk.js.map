{"version":3,"sources":["../node_modules/_mobx@5.15.1@mobx/lib/mobx.module.js","../node_modules/_mobx-react-lite@1.5.2@mobx-react-lite/dist/index.module.js","../../src/utils/utils.js","../../src/observerClass.js","../../src/observer.js","../../src/Provider.js","../../src/disposeOnUnmount.js","../../src/propTypes.js","../../src/index.js","../node_modules/_antd-mobile@2.3.1@antd-mobile/lib/white-space/style/css.js","../node_modules/_antd-mobile@2.3.1@antd-mobile/lib/white-space/index.js","../node_modules/@babel/runtime/helpers/esm/initializerDefineProperty.js","../node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","OBFUSCATED_ERROR","EMPTY_ARRAY","freeze","EMPTY_OBJECT","getNextId","globalState","mobxGuid","fail","message","invariant","check","Error","once","func","invoked","noop","isObject","isPlainObject","proto","getPrototypeOf","addHiddenProp","object","propName","defineProperty","enumerable","writable","configurable","createInstanceofPredicate","name","clazz","x","isES6Map","thing","Map","isES6Set","Set","getPlainObjectKeys","enumerables","key","add","getOwnPropertySymbols","forEach","k","getOwnPropertyDescriptor","from","stringifyKey","toString","String","toPrimitive","$mobx","Atom","isPendingUnobservation","isBeingObserved","observers","diffValue","lastAccessedBy","lowestObserverState","IDerivationState","NOT_TRACKING","onBecomeObserved","onBecomeObservedListeners","listener","onBecomeUnobserved","onBecomeUnobservedListeners","reportObserved","reportChanged","startBatch","observable","STALE","dependenciesState","UP_TO_DATE","isTracing","TraceMode","NONE","logTraceInfo","onBecomeStale","propagateChanged","endBatch","isAtom","createAtom","onBecomeObservedHandler","onBecomeUnobservedHandler","arg3","atom","interceptHook","comparer","identity","a","structural","deepEqual","default","is","shallow","mobxDidRunLazyInitializersSymbol","mobxPendingDecorators","enumerableDescriptorCache","nonEnumerableDescriptorCache","createPropertyInitializerDescriptor","prop","cache","get","initializeInstance","set","target","e_1","_a","decorators","keys","keys_1","keys_1_1","propertyCreator","descriptor","decoratorTarget","decoratorArguments","e_1_1","return","createPropDecorator","propertyInitiallyEnumerable","decorator","applyImmediately","inheritedDecorators","quacksLikeADecorator","slice","args","deepEnhancer","v","_","isObservable","isArray","array","undefined","map","referenceEnhancer","newValue","createDecoratorForEnhancer","enhancer","propertyName","_decoratorTarget","decoratorArgs","initialValue","initializer","asObservableObject","addObservableProp","res","process","defaultCreateObservableOptions","deep","defaultDecorator","proxy","asCreateObservableOptions","deepDecorator","shallowDecorator","isObservableObject","isObservableArray","isObservableMap","isObservableSet","refDecorator","refStructDecorator","oldValue","getEnhancerFromOptions","options","observableFactories","box","incorrectlyUsedAsDecorator","ObservableValue","equals","initialValues","createObservableArray","ObservableMap","ObservableSet","props","extendObservable","getDefaultDecoratorFromObjectOptions","base","createDynamicObservableObject","extendObservableObjectWithProperties","ref","struct","arg2","methodName","computedDecorator","instance","addComputedProp","context","computedStructDecorator","computed","arg1","opts","ComputedValue","CaughtException","cause","isCaughtException","shouldCompute","derivation","POSSIBLY_STALE","prevAllowStateReads","allowStateReadsStart","prevUntracked","untrackedStart","obs","observing","l","obj","isComputedValue","disableErrorBoundaries","untrackedEnd","allowStateReadsEnd","changeDependenciesStateTo0","checkIfStateModificationsAreAllowed","hasObservers","size","computationDepth","allowStateChanges","enforceActions","trackDerivedFunction","f","newObserving","unboundDepsCount","runId","result","prevTracking","trackingDerivation","prevObserving","lowestNewObservingDerivationState","i0","dep","removeObserver","addObserver","bindDependencies","clearObserving","untracked","action","prev","allowStateReads","currentActionId","nextActionId","createAction","actionName","fn","executeAction","isMobxAction","scope","runInfo","startTime","prevDerivation","prevAllowStateChanges","allowStateChangesStart","notifySpy","actionId","parentActionId","_startAction","err","suppressReactionErrors","allowStateChangesEnd","_endAction","_super","_this","hasUnreportedChange","__","constructor","create","__extends","dehanceValue","dehancer","prepareNewValue","UNCHANGED","setNewValue","hasInterceptors","change","interceptChange","type","hasListeners","notifyListeners","intercept","handler","registerInterceptor","observe","fireImmediately","registerListener","toJSON","valueOf","__mapid","isComputing","isRunningSetter","setter","compareStructural","requiresReaction","keepAlive","propagateMaybeChanged","inBatch","trackAndCompute","propagateChangeConfirmed","warnAboutUntrackedRead","computeValue","peek","wasSuspended","changed","track","suspend","firstTime","prevValue","autorun","prevU","MobXGlobals","version","pendingUnobservations","pendingReactions","isRunningReactions","spyListeners","globalReactionErrorHandlers","computedRequiresReaction","reactionRequiresObservable","observableRequiresReaction","computedConfigurable","mockGlobal","getGlobal","window","global","self","canMergeGlobalState","isolateCalled","__mobxInstanceCount","__mobxGlobals","setTimeout","node","delete","queueForUnobservation","runReactions","list","console","log","BREAK","lines","printDepTree","tree","depth","join","dependencies","child","getDependencyTree","Function","replace","Reaction","onInvalidate","errorHandler","requiresObservable","isDisposed","_isScheduled","_isTrackPending","_isRunning","schedule","isScheduled","runReaction","reportExceptionInDerivation","warn","dispose","getDisposer","bind","trace","enterBreakPoint","_i","pop","getAtom","getAtomFromArgs","LOG","MAX_REACTION_ITERATIONS","reactionScheduler","runReactionsHelper","allReactions","iterations","splice","remainingReactions","isReaction","setReactionScheduler","baseScheduler","spy","dontReassignFields","namedActionDecorator","initializer_1","actionFieldDecorator","arg4","runInAction","defineBoundAction","view","reaction","scheduler","delay","reactionRunner","onError","scheduler_1","createSchedulerFromOptions","isScheduled_1","bound","applyToInstance","run","hook","cb","listenersKey","hookListeners","configure","isolateGlobalState","ea","properties","e_2","_b","keys_2","keys_2_1","resultDescriptor","e_2_1","property","nodeToDependencyTree","item","indexOf","unique","FlowCancellationError","_isObservable","values","has","transaction","thisArg","getAdm","isPropertyKey","val","objectProxyTraps","adm","write","defaultEnhancer","parseInt","values_1","key_1","deleteProperty","remove","ownKeys","keysAtom","Reflect","preventExtensions","Proxy","interceptable","interceptors","idx","listenable","changeListeners","listeners","arrayTraps","getArrayLength","arrayExtensions","isNaN","setArrayLength","owned","ObservableArrayAdministration","spliceWithArray","lastKnownLength","newV","oldV","dehanceValues","index","added","addedCount","removed","removedCount","newLength","currentLength","newItems","updateArrayLength","oldLength","delta","deleteCount","Math","max","min","spliceItemsIntoValues","notifyArraySplice","notifyArrayChildUpdate","notify","clear","toJS","items","shift","unshift","reverse","clone","sort","compareFn","funcName","isObservableArrayAdministration","_a$1","ObservableMapMarker","initialData","_keysAtom","toStringTag","_data","_hasMap","merge","_has","entry","newEntry","hasKey","_updateValue","_addValue","_updateHasMapEntry","nextIndex","makeIterable","entries","callback","_c","_d","_e","other","newKeys","filter","toPOJO","e_3","e_3_1","ObservableSetMarker","_atom","callbackFn","observableValues","ObservableObjectAdministration","read","pendingKeys","exists","observablePropertyConfigs","generateObservablePropConfig","notifyPropertyAddition","propertyOwner","isPropertyConfigurable","computedPropertyConfigs","getAdministrationForComputedPropOwner","generateComputedPropConfig","oldObservable","illegalAccess","owner","getKeys","isObservableObjectAdministration","anyThing","getAdministration","eq","aStack","bStack","unwrap","className","areArrays","aCtor","bCtor","has$1","getSelf","__MOBX_DEVTOOLS_GLOBAL_HOOK__","injectMobx","extras","getDebugName","useState","globalIsUsingStaticRendering","isUsingStaticRendering","printDebugValue","current","useForceUpdate","setTick","useCallback","tick","useObserver","baseComponentName","forceUpdate","useRef","rendering","exception","useDebugValue","useEffect","useUnmount","observer","baseComponent","memoComponent","realOptions","forwardRef","displayName","wrappedComponent","memo","hoistBlackList","$$typeof","render","compare","ObserverComponent","children","component","ObserverPropsCheck","componentName","location","propFullName","extraKey","hasProp","hasExtraProp","propTypes","let","symbolId","createdSymbols","newSymbol","symbol","shallowEqual","objA","objB","keysA","keysB","y","setHiddenProp","const","mobxMixins","mobxPatchedDefinition","wrapper","realMethod","mixins","locks","retVal","methods","mx","wrapFunction","patch","mixinMethod","methodMixins","oldDefinition","newDefinition","createDefinition","originalMethod","wrappedFunc","mobxAdminProperty","mobxIsUnmounted","skipRenderKey","isForcingUpdateKey","observerSCU","nextProps","nextState","state","makeObservableProp","valueHolderKey","atomHolderKey","hasSymbol","for","ReactForwardRefSymbol","ReactMemoSymbol","componentClass","isMobxInjector","baseRender","React","Observer","isReactClass","isPrototypeOf","Component","componentWillReact","PureComponent","shouldComponentUpdate","initialName","isRenderingPending","hasError","reactiveRender","_allowStateChanges","reactComponent","observerLite","createContext","createChainableTypeChecker","validate","checkType","isRequired","rest","chainedCheckType","getPropType","propValue","propType","RegExp","createObservableTypeCheckerCreator","allowNativeType","mobxType","toLowerCase","mobxChecker","preciseType","Date","nativeTypeExpectationMessage","createObservableArrayOfTypeChecker","typeChecker","rdBatched","require","exports","_classCallCheck3","_interopRequireDefault","_createClass3","_possibleConstructorReturn3","_inherits3","_classnames2","__esModule","newObj","_interopRequireWildcard","WhiteSpace","_React$Component","_props","prefixCls","style","onClick","wrapCls","createElement","defaultProps","module","_initializerDefineProperty","_applyDecoratedDescriptor","desc","reduce","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","GenStateSuspendedStart","method","arg","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","__await","then","unwrapped","TypeError","info","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isGeneratorFunction","genFun","ctor","mark","awrap","async","iter","skipTempReset","charAt","stop","rootRecord","rval","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode"],"mappings":"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","file":"static/js/13.2a53a935.chunk.js","sourcesContent":["/** MobX - (c) Michel Weststrate 2015 - 2019 - MIT Licensed */\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\nvar OBFUSCATED_ERROR = \"An invariant failed, however the error is obfuscated because this is a production build.\";\nvar EMPTY_ARRAY = [];\nObject.freeze(EMPTY_ARRAY);\nvar EMPTY_OBJECT = {};\nObject.freeze(EMPTY_OBJECT);\nfunction getNextId() {\n    return ++globalState.mobxGuid;\n}\nfunction fail(message) {\n    invariant(false, message);\n    throw \"X\"; // unreachable\n}\nfunction invariant(check, message) {\n    if (!check)\n        throw new Error(\"[mobx] \" + (message || OBFUSCATED_ERROR));\n}\n/**\n * Prints a deprecation message, but only one time.\n * Returns false if the deprecated message was already printed before\n */\nvar deprecatedMessages = [];\nfunction deprecated(msg, thing) {\n    if (process.env.NODE_ENV === \"production\")\n        return false;\n    if (thing) {\n        return deprecated(\"'\" + msg + \"', use '\" + thing + \"' instead.\");\n    }\n    if (deprecatedMessages.indexOf(msg) !== -1)\n        return false;\n    deprecatedMessages.push(msg);\n    console.error(\"[mobx] Deprecated: \" + msg);\n    return true;\n}\n/**\n * Makes sure that the provided function is invoked at most once.\n */\nfunction once(func) {\n    var invoked = false;\n    return function () {\n        if (invoked)\n            return;\n        invoked = true;\n        return func.apply(this, arguments);\n    };\n}\nvar noop = function () { };\nfunction unique(list) {\n    var res = [];\n    list.forEach(function (item) {\n        if (res.indexOf(item) === -1)\n            res.push(item);\n    });\n    return res;\n}\nfunction isObject(value) {\n    return value !== null && typeof value === \"object\";\n}\nfunction isPlainObject(value) {\n    if (value === null || typeof value !== \"object\")\n        return false;\n    var proto = Object.getPrototypeOf(value);\n    return proto === Object.prototype || proto === null;\n}\nfunction addHiddenProp(object, propName, value) {\n    Object.defineProperty(object, propName, {\n        enumerable: false,\n        writable: true,\n        configurable: true,\n        value: value\n    });\n}\nfunction addHiddenFinalProp(object, propName, value) {\n    Object.defineProperty(object, propName, {\n        enumerable: false,\n        writable: false,\n        configurable: true,\n        value: value\n    });\n}\nfunction isPropertyConfigurable(object, prop) {\n    var descriptor = Object.getOwnPropertyDescriptor(object, prop);\n    return !descriptor || (descriptor.configurable !== false && descriptor.writable !== false);\n}\nfunction assertPropertyConfigurable(object, prop) {\n    if (process.env.NODE_ENV !== \"production\" && !isPropertyConfigurable(object, prop))\n        fail(\"Cannot make property '\" + prop.toString() + \"' observable, it is not configurable and writable in the target object\");\n}\nfunction createInstanceofPredicate(name, clazz) {\n    var propName = \"isMobX\" + name;\n    clazz.prototype[propName] = true;\n    return function (x) {\n        return isObject(x) && x[propName] === true;\n    };\n}\n/**\n * Returns whether the argument is an array, disregarding observability.\n */\nfunction isArrayLike(x) {\n    return Array.isArray(x) || isObservableArray(x);\n}\nfunction isES6Map(thing) {\n    return thing instanceof Map;\n}\nfunction isES6Set(thing) {\n    return thing instanceof Set;\n}\n/**\n * Returns the following: own keys, prototype keys & own symbol keys, if they are enumerable.\n */\nfunction getPlainObjectKeys(object) {\n    var enumerables = new Set();\n    for (var key in object)\n        enumerables.add(key); // *all* enumerables\n    Object.getOwnPropertySymbols(object).forEach(function (k) {\n        if (Object.getOwnPropertyDescriptor(object, k).enumerable)\n            enumerables.add(k);\n    }); // *own* symbols\n    // Note: this implementation is missing enumerable, inherited, symbolic property names! That would however pretty expensive to add,\n    // as there is no efficient iterator that returns *all* properties\n    return Array.from(enumerables);\n}\nfunction stringifyKey(key) {\n    if (key && key.toString)\n        return key.toString();\n    else\n        return new String(key).toString();\n}\nfunction getMapLikeKeys(map) {\n    if (isPlainObject(map))\n        return Object.keys(map);\n    if (Array.isArray(map))\n        return map.map(function (_a) {\n            var _b = __read(_a, 1), key = _b[0];\n            return key;\n        });\n    if (isES6Map(map) || isObservableMap(map))\n        return Array.from(map.keys());\n    return fail(\"Cannot get keys from '\" + map + \"'\");\n}\nfunction toPrimitive(value) {\n    return value === null ? null : typeof value === \"object\" ? \"\" + value : value;\n}\n\nvar $mobx = Symbol(\"mobx administration\");\nvar Atom = /** @class */ (function () {\n    /**\n     * Create a new atom. For debugging purposes it is recommended to give it a name.\n     * The onBecomeObserved and onBecomeUnobserved callbacks can be used for resource management.\n     */\n    function Atom(name) {\n        if (name === void 0) { name = \"Atom@\" + getNextId(); }\n        this.name = name;\n        this.isPendingUnobservation = false; // for effective unobserving. BaseAtom has true, for extra optimization, so its onBecomeUnobserved never gets called, because it's not needed\n        this.isBeingObserved = false;\n        this.observers = new Set();\n        this.diffValue = 0;\n        this.lastAccessedBy = 0;\n        this.lowestObserverState = IDerivationState.NOT_TRACKING;\n    }\n    Atom.prototype.onBecomeObserved = function () {\n        if (this.onBecomeObservedListeners) {\n            this.onBecomeObservedListeners.forEach(function (listener) { return listener(); });\n        }\n    };\n    Atom.prototype.onBecomeUnobserved = function () {\n        if (this.onBecomeUnobservedListeners) {\n            this.onBecomeUnobservedListeners.forEach(function (listener) { return listener(); });\n        }\n    };\n    /**\n     * Invoke this method to notify mobx that your atom has been used somehow.\n     * Returns true if there is currently a reactive context.\n     */\n    Atom.prototype.reportObserved = function () {\n        return reportObserved(this);\n    };\n    /**\n     * Invoke this method _after_ this method has changed to signal mobx that all its observers should invalidate.\n     */\n    Atom.prototype.reportChanged = function () {\n        startBatch();\n        propagateChanged(this);\n        endBatch();\n    };\n    Atom.prototype.toString = function () {\n        return this.name;\n    };\n    return Atom;\n}());\nvar isAtom = createInstanceofPredicate(\"Atom\", Atom);\nfunction createAtom(name, onBecomeObservedHandler, onBecomeUnobservedHandler) {\n    if (onBecomeObservedHandler === void 0) { onBecomeObservedHandler = noop; }\n    if (onBecomeUnobservedHandler === void 0) { onBecomeUnobservedHandler = noop; }\n    var atom = new Atom(name);\n    // default `noop` listener will not initialize the hook Set\n    if (onBecomeObservedHandler !== noop) {\n        onBecomeObserved(atom, onBecomeObservedHandler);\n    }\n    if (onBecomeUnobservedHandler !== noop) {\n        onBecomeUnobserved(atom, onBecomeUnobservedHandler);\n    }\n    return atom;\n}\n\nfunction identityComparer(a, b) {\n    return a === b;\n}\nfunction structuralComparer(a, b) {\n    return deepEqual(a, b);\n}\nfunction shallowComparer(a, b) {\n    return deepEqual(a, b, 1);\n}\nfunction defaultComparer(a, b) {\n    return Object.is(a, b);\n}\nvar comparer = {\n    identity: identityComparer,\n    structural: structuralComparer,\n    default: defaultComparer,\n    shallow: shallowComparer\n};\n\nvar mobxDidRunLazyInitializersSymbol = Symbol(\"mobx did run lazy initializers\");\nvar mobxPendingDecorators = Symbol(\"mobx pending decorators\");\nvar enumerableDescriptorCache = {};\nvar nonEnumerableDescriptorCache = {};\nfunction createPropertyInitializerDescriptor(prop, enumerable) {\n    var cache = enumerable ? enumerableDescriptorCache : nonEnumerableDescriptorCache;\n    return (cache[prop] ||\n        (cache[prop] = {\n            configurable: true,\n            enumerable: enumerable,\n            get: function () {\n                initializeInstance(this);\n                return this[prop];\n            },\n            set: function (value) {\n                initializeInstance(this);\n                this[prop] = value;\n            }\n        }));\n}\nfunction initializeInstance(target) {\n    var e_1, _a;\n    if (target[mobxDidRunLazyInitializersSymbol] === true)\n        return;\n    var decorators = target[mobxPendingDecorators];\n    if (decorators) {\n        addHiddenProp(target, mobxDidRunLazyInitializersSymbol, true);\n        // Build property key array from both strings and symbols\n        var keys = __spread(Object.getOwnPropertySymbols(decorators), Object.keys(decorators));\n        try {\n            for (var keys_1 = __values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {\n                var key = keys_1_1.value;\n                var d = decorators[key];\n                d.propertyCreator(target, d.prop, d.descriptor, d.decoratorTarget, d.decoratorArguments);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n}\nfunction createPropDecorator(propertyInitiallyEnumerable, propertyCreator) {\n    return function decoratorFactory() {\n        var decoratorArguments;\n        var decorator = function decorate(target, prop, descriptor, applyImmediately\n        // This is a special parameter to signal the direct application of a decorator, allow extendObservable to skip the entire type decoration part,\n        // as the instance to apply the decorator to equals the target\n        ) {\n            if (applyImmediately === true) {\n                propertyCreator(target, prop, descriptor, target, decoratorArguments);\n                return null;\n            }\n            if (process.env.NODE_ENV !== \"production\" && !quacksLikeADecorator(arguments))\n                fail(\"This function is a decorator, but it wasn't invoked like a decorator\");\n            if (!Object.prototype.hasOwnProperty.call(target, mobxPendingDecorators)) {\n                var inheritedDecorators = target[mobxPendingDecorators];\n                addHiddenProp(target, mobxPendingDecorators, __assign({}, inheritedDecorators));\n            }\n            target[mobxPendingDecorators][prop] = {\n                prop: prop,\n                propertyCreator: propertyCreator,\n                descriptor: descriptor,\n                decoratorTarget: target,\n                decoratorArguments: decoratorArguments\n            };\n            return createPropertyInitializerDescriptor(prop, propertyInitiallyEnumerable);\n        };\n        if (quacksLikeADecorator(arguments)) {\n            // @decorator\n            decoratorArguments = EMPTY_ARRAY;\n            return decorator.apply(null, arguments);\n        }\n        else {\n            // @decorator(args)\n            decoratorArguments = Array.prototype.slice.call(arguments);\n            return decorator;\n        }\n    };\n}\nfunction quacksLikeADecorator(args) {\n    return (((args.length === 2 || args.length === 3) &&\n        (typeof args[1] === \"string\" || typeof args[1] === \"symbol\")) ||\n        (args.length === 4 && args[3] === true));\n}\n\nfunction deepEnhancer(v, _, name) {\n    // it is an observable already, done\n    if (isObservable(v))\n        return v;\n    // something that can be converted and mutated?\n    if (Array.isArray(v))\n        return observable.array(v, { name: name });\n    if (isPlainObject(v))\n        return observable.object(v, undefined, { name: name });\n    if (isES6Map(v))\n        return observable.map(v, { name: name });\n    if (isES6Set(v))\n        return observable.set(v, { name: name });\n    return v;\n}\nfunction shallowEnhancer(v, _, name) {\n    if (v === undefined || v === null)\n        return v;\n    if (isObservableObject(v) || isObservableArray(v) || isObservableMap(v) || isObservableSet(v))\n        return v;\n    if (Array.isArray(v))\n        return observable.array(v, { name: name, deep: false });\n    if (isPlainObject(v))\n        return observable.object(v, undefined, { name: name, deep: false });\n    if (isES6Map(v))\n        return observable.map(v, { name: name, deep: false });\n    if (isES6Set(v))\n        return observable.set(v, { name: name, deep: false });\n    return fail(process.env.NODE_ENV !== \"production\" &&\n        \"The shallow modifier / decorator can only used in combination with arrays, objects, maps and sets\");\n}\nfunction referenceEnhancer(newValue) {\n    // never turn into an observable\n    return newValue;\n}\nfunction refStructEnhancer(v, oldValue, name) {\n    if (process.env.NODE_ENV !== \"production\" && isObservable(v))\n        throw \"observable.struct should not be used with observable values\";\n    if (deepEqual(v, oldValue))\n        return oldValue;\n    return v;\n}\n\nfunction createDecoratorForEnhancer(enhancer) {\n    invariant(enhancer);\n    var decorator = createPropDecorator(true, function (target, propertyName, descriptor, _decoratorTarget, decoratorArgs) {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(!descriptor || !descriptor.get, \"@observable cannot be used on getter (property \\\"\" + stringifyKey(propertyName) + \"\\\"), use @computed instead.\");\n        }\n        var initialValue = descriptor\n            ? descriptor.initializer\n                ? descriptor.initializer.call(target)\n                : descriptor.value\n            : undefined;\n        asObservableObject(target).addObservableProp(propertyName, initialValue, enhancer);\n    });\n    var res = \n    // Extra process checks, as this happens during module initialization\n    typeof process !== \"undefined\" && process.env && process.env.NODE_ENV !== \"production\"\n        ? function observableDecorator() {\n            // This wrapper function is just to detect illegal decorator invocations, deprecate in a next version\n            // and simply return the created prop decorator\n            if (arguments.length < 2)\n                return fail(\"Incorrect decorator invocation. @observable decorator doesn't expect any arguments\");\n            return decorator.apply(null, arguments);\n        }\n        : decorator;\n    res.enhancer = enhancer;\n    return res;\n}\n\n// Predefined bags of create observable options, to avoid allocating temporarily option objects\n// in the majority of cases\nvar defaultCreateObservableOptions = {\n    deep: true,\n    name: undefined,\n    defaultDecorator: undefined,\n    proxy: true\n};\nObject.freeze(defaultCreateObservableOptions);\nfunction assertValidOption(key) {\n    if (!/^(deep|name|equals|defaultDecorator|proxy)$/.test(key))\n        fail(\"invalid option for (extend)observable: \" + key);\n}\nfunction asCreateObservableOptions(thing) {\n    if (thing === null || thing === undefined)\n        return defaultCreateObservableOptions;\n    if (typeof thing === \"string\")\n        return { name: thing, deep: true, proxy: true };\n    if (process.env.NODE_ENV !== \"production\") {\n        if (typeof thing !== \"object\")\n            return fail(\"expected options object\");\n        Object.keys(thing).forEach(assertValidOption);\n    }\n    return thing;\n}\nvar deepDecorator = createDecoratorForEnhancer(deepEnhancer);\nvar shallowDecorator = createDecoratorForEnhancer(shallowEnhancer);\nvar refDecorator = createDecoratorForEnhancer(referenceEnhancer);\nvar refStructDecorator = createDecoratorForEnhancer(refStructEnhancer);\nfunction getEnhancerFromOptions(options) {\n    return options.defaultDecorator\n        ? options.defaultDecorator.enhancer\n        : options.deep === false\n            ? referenceEnhancer\n            : deepEnhancer;\n}\n/**\n * Turns an object, array or function into a reactive structure.\n * @param v the value which should become observable.\n */\nfunction createObservable(v, arg2, arg3) {\n    // @observable someProp;\n    if (typeof arguments[1] === \"string\" || typeof arguments[1] === \"symbol\") {\n        return deepDecorator.apply(null, arguments);\n    }\n    // it is an observable already, done\n    if (isObservable(v))\n        return v;\n    // something that can be converted and mutated?\n    var res = isPlainObject(v)\n        ? observable.object(v, arg2, arg3)\n        : Array.isArray(v)\n            ? observable.array(v, arg2)\n            : isES6Map(v)\n                ? observable.map(v, arg2)\n                : isES6Set(v)\n                    ? observable.set(v, arg2)\n                    : v;\n    // this value could be converted to a new observable data structure, return it\n    if (res !== v)\n        return res;\n    // otherwise, just box it\n    fail(process.env.NODE_ENV !== \"production\" &&\n        \"The provided value could not be converted into an observable. If you want just create an observable reference to the object use 'observable.box(value)'\");\n}\nvar observableFactories = {\n    box: function (value, options) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"box\");\n        var o = asCreateObservableOptions(options);\n        return new ObservableValue(value, getEnhancerFromOptions(o), o.name, true, o.equals);\n    },\n    array: function (initialValues, options) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"array\");\n        var o = asCreateObservableOptions(options);\n        return createObservableArray(initialValues, getEnhancerFromOptions(o), o.name);\n    },\n    map: function (initialValues, options) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"map\");\n        var o = asCreateObservableOptions(options);\n        return new ObservableMap(initialValues, getEnhancerFromOptions(o), o.name);\n    },\n    set: function (initialValues, options) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"set\");\n        var o = asCreateObservableOptions(options);\n        return new ObservableSet(initialValues, getEnhancerFromOptions(o), o.name);\n    },\n    object: function (props, decorators, options) {\n        if (typeof arguments[1] === \"string\")\n            incorrectlyUsedAsDecorator(\"object\");\n        var o = asCreateObservableOptions(options);\n        if (o.proxy === false) {\n            return extendObservable({}, props, decorators, o);\n        }\n        else {\n            var defaultDecorator = getDefaultDecoratorFromObjectOptions(o);\n            var base = extendObservable({}, undefined, undefined, o);\n            var proxy = createDynamicObservableObject(base);\n            extendObservableObjectWithProperties(proxy, props, decorators, defaultDecorator);\n            return proxy;\n        }\n    },\n    ref: refDecorator,\n    shallow: shallowDecorator,\n    deep: deepDecorator,\n    struct: refStructDecorator\n};\nvar observable = createObservable;\n// weird trick to keep our typings nicely with our funcs, and still extend the observable function\nObject.keys(observableFactories).forEach(function (name) { return (observable[name] = observableFactories[name]); });\nfunction incorrectlyUsedAsDecorator(methodName) {\n    fail(\n    // process.env.NODE_ENV !== \"production\" &&\n    \"Expected one or two arguments to observable.\" + methodName + \". Did you accidentally try to use observable.\" + methodName + \" as decorator?\");\n}\n\nvar computedDecorator = createPropDecorator(false, function (instance, propertyName, descriptor, decoratorTarget, decoratorArgs) {\n    var get = descriptor.get, set = descriptor.set; // initialValue is the descriptor for get / set props\n    // Optimization: faster on decorator target or instance? Assuming target\n    // Optimization: find out if declaring on instance isn't just faster. (also makes the property descriptor simpler). But, more memory usage..\n    // Forcing instance now, fixes hot reloadig issues on React Native:\n    var options = decoratorArgs[0] || {};\n    asObservableObject(instance).addComputedProp(instance, propertyName, __assign({ get: get,\n        set: set, context: instance }, options));\n});\nvar computedStructDecorator = computedDecorator({ equals: comparer.structural });\n/**\n * Decorator for class properties: @computed get value() { return expr; }.\n * For legacy purposes also invokable as ES5 observable created: `computed(() => expr)`;\n */\nvar computed = function computed(arg1, arg2, arg3) {\n    if (typeof arg2 === \"string\") {\n        // @computed\n        return computedDecorator.apply(null, arguments);\n    }\n    if (arg1 !== null && typeof arg1 === \"object\" && arguments.length === 1) {\n        // @computed({ options })\n        return computedDecorator.apply(null, arguments);\n    }\n    // computed(expr, options?)\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(typeof arg1 === \"function\", \"First argument to `computed` should be an expression.\");\n        invariant(arguments.length < 3, \"Computed takes one or two arguments if used as function\");\n    }\n    var opts = typeof arg2 === \"object\" ? arg2 : {};\n    opts.get = arg1;\n    opts.set = typeof arg2 === \"function\" ? arg2 : opts.set;\n    opts.name = opts.name || arg1.name || \"\"; /* for generated name */\n    return new ComputedValue(opts);\n};\ncomputed.struct = computedStructDecorator;\n\nvar IDerivationState;\n(function (IDerivationState) {\n    // before being run or (outside batch and not being observed)\n    // at this point derivation is not holding any data about dependency tree\n    IDerivationState[IDerivationState[\"NOT_TRACKING\"] = -1] = \"NOT_TRACKING\";\n    // no shallow dependency changed since last computation\n    // won't recalculate derivation\n    // this is what makes mobx fast\n    IDerivationState[IDerivationState[\"UP_TO_DATE\"] = 0] = \"UP_TO_DATE\";\n    // some deep dependency changed, but don't know if shallow dependency changed\n    // will require to check first if UP_TO_DATE or POSSIBLY_STALE\n    // currently only ComputedValue will propagate POSSIBLY_STALE\n    //\n    // having this state is second big optimization:\n    // don't have to recompute on every dependency change, but only when it's needed\n    IDerivationState[IDerivationState[\"POSSIBLY_STALE\"] = 1] = \"POSSIBLY_STALE\";\n    // A shallow dependency has changed since last computation and the derivation\n    // will need to recompute when it's needed next.\n    IDerivationState[IDerivationState[\"STALE\"] = 2] = \"STALE\";\n})(IDerivationState || (IDerivationState = {}));\nvar TraceMode;\n(function (TraceMode) {\n    TraceMode[TraceMode[\"NONE\"] = 0] = \"NONE\";\n    TraceMode[TraceMode[\"LOG\"] = 1] = \"LOG\";\n    TraceMode[TraceMode[\"BREAK\"] = 2] = \"BREAK\";\n})(TraceMode || (TraceMode = {}));\nvar CaughtException = /** @class */ (function () {\n    function CaughtException(cause) {\n        this.cause = cause;\n        // Empty\n    }\n    return CaughtException;\n}());\nfunction isCaughtException(e) {\n    return e instanceof CaughtException;\n}\n/**\n * Finds out whether any dependency of the derivation has actually changed.\n * If dependenciesState is 1 then it will recalculate dependencies,\n * if any dependency changed it will propagate it by changing dependenciesState to 2.\n *\n * By iterating over the dependencies in the same order that they were reported and\n * stopping on the first change, all the recalculations are only called for ComputedValues\n * that will be tracked by derivation. That is because we assume that if the first x\n * dependencies of the derivation doesn't change then the derivation should run the same way\n * up until accessing x-th dependency.\n */\nfunction shouldCompute(derivation) {\n    switch (derivation.dependenciesState) {\n        case IDerivationState.UP_TO_DATE:\n            return false;\n        case IDerivationState.NOT_TRACKING:\n        case IDerivationState.STALE:\n            return true;\n        case IDerivationState.POSSIBLY_STALE: {\n            // state propagation can occur outside of action/reactive context #2195\n            var prevAllowStateReads = allowStateReadsStart(true);\n            var prevUntracked = untrackedStart(); // no need for those computeds to be reported, they will be picked up in trackDerivedFunction.\n            var obs = derivation.observing, l = obs.length;\n            for (var i = 0; i < l; i++) {\n                var obj = obs[i];\n                if (isComputedValue(obj)) {\n                    if (globalState.disableErrorBoundaries) {\n                        obj.get();\n                    }\n                    else {\n                        try {\n                            obj.get();\n                        }\n                        catch (e) {\n                            // we are not interested in the value *or* exception at this moment, but if there is one, notify all\n                            untrackedEnd(prevUntracked);\n                            allowStateReadsEnd(prevAllowStateReads);\n                            return true;\n                        }\n                    }\n                    // if ComputedValue `obj` actually changed it will be computed and propagated to its observers.\n                    // and `derivation` is an observer of `obj`\n                    // invariantShouldCompute(derivation)\n                    if (derivation.dependenciesState === IDerivationState.STALE) {\n                        untrackedEnd(prevUntracked);\n                        allowStateReadsEnd(prevAllowStateReads);\n                        return true;\n                    }\n                }\n            }\n            changeDependenciesStateTo0(derivation);\n            untrackedEnd(prevUntracked);\n            allowStateReadsEnd(prevAllowStateReads);\n            return false;\n        }\n    }\n}\n// function invariantShouldCompute(derivation: IDerivation) {\n//     const newDepState = (derivation as any).dependenciesState\n//     if (\n//         process.env.NODE_ENV === \"production\" &&\n//         (newDepState === IDerivationState.POSSIBLY_STALE ||\n//             newDepState === IDerivationState.NOT_TRACKING)\n//     )\n//         fail(\"Illegal dependency state\")\n// }\nfunction isComputingDerivation() {\n    return globalState.trackingDerivation !== null; // filter out actions inside computations\n}\nfunction checkIfStateModificationsAreAllowed(atom) {\n    var hasObservers = atom.observers.size > 0;\n    // Should never be possible to change an observed observable from inside computed, see #798\n    if (globalState.computationDepth > 0 && hasObservers)\n        fail(process.env.NODE_ENV !== \"production\" &&\n            \"Computed values are not allowed to cause side effects by changing observables that are already being observed. Tried to modify: \" + atom.name);\n    // Should not be possible to change observed state outside strict mode, except during initialization, see #563\n    if (!globalState.allowStateChanges && (hasObservers || globalState.enforceActions === \"strict\"))\n        fail(process.env.NODE_ENV !== \"production\" &&\n            (globalState.enforceActions\n                ? \"Since strict-mode is enabled, changing observed observable values outside actions is not allowed. Please wrap the code in an `action` if this change is intended. Tried to modify: \"\n                : \"Side effects like changing state are not allowed at this point. Are you trying to modify state from, for example, the render function of a React component? Tried to modify: \") +\n                atom.name);\n}\nfunction checkIfStateReadsAreAllowed(observable) {\n    if (process.env.NODE_ENV !== \"production\" &&\n        !globalState.allowStateReads &&\n        globalState.observableRequiresReaction) {\n        console.warn(\"[mobx] Observable \" + observable.name + \" being read outside a reactive context\");\n    }\n}\n/**\n * Executes the provided function `f` and tracks which observables are being accessed.\n * The tracking information is stored on the `derivation` object and the derivation is registered\n * as observer of any of the accessed observables.\n */\nfunction trackDerivedFunction(derivation, f, context) {\n    var prevAllowStateReads = allowStateReadsStart(true);\n    // pre allocate array allocation + room for variation in deps\n    // array will be trimmed by bindDependencies\n    changeDependenciesStateTo0(derivation);\n    derivation.newObserving = new Array(derivation.observing.length + 100);\n    derivation.unboundDepsCount = 0;\n    derivation.runId = ++globalState.runId;\n    var prevTracking = globalState.trackingDerivation;\n    globalState.trackingDerivation = derivation;\n    var result;\n    if (globalState.disableErrorBoundaries === true) {\n        result = f.call(context);\n    }\n    else {\n        try {\n            result = f.call(context);\n        }\n        catch (e) {\n            result = new CaughtException(e);\n        }\n    }\n    globalState.trackingDerivation = prevTracking;\n    bindDependencies(derivation);\n    warnAboutDerivationWithoutDependencies(derivation);\n    allowStateReadsEnd(prevAllowStateReads);\n    return result;\n}\nfunction warnAboutDerivationWithoutDependencies(derivation) {\n    if (process.env.NODE_ENV === \"production\")\n        return;\n    if (derivation.observing.length !== 0)\n        return;\n    if (globalState.reactionRequiresObservable || derivation.requiresObservable) {\n        console.warn(\"[mobx] Derivation \" + derivation.name + \" is created/updated without reading any observable value\");\n    }\n}\n/**\n * diffs newObserving with observing.\n * update observing to be newObserving with unique observables\n * notify observers that become observed/unobserved\n */\nfunction bindDependencies(derivation) {\n    // invariant(derivation.dependenciesState !== IDerivationState.NOT_TRACKING, \"INTERNAL ERROR bindDependencies expects derivation.dependenciesState !== -1\");\n    var prevObserving = derivation.observing;\n    var observing = (derivation.observing = derivation.newObserving);\n    var lowestNewObservingDerivationState = IDerivationState.UP_TO_DATE;\n    // Go through all new observables and check diffValue: (this list can contain duplicates):\n    //   0: first occurrence, change to 1 and keep it\n    //   1: extra occurrence, drop it\n    var i0 = 0, l = derivation.unboundDepsCount;\n    for (var i = 0; i < l; i++) {\n        var dep = observing[i];\n        if (dep.diffValue === 0) {\n            dep.diffValue = 1;\n            if (i0 !== i)\n                observing[i0] = dep;\n            i0++;\n        }\n        // Upcast is 'safe' here, because if dep is IObservable, `dependenciesState` will be undefined,\n        // not hitting the condition\n        if (dep.dependenciesState > lowestNewObservingDerivationState) {\n            lowestNewObservingDerivationState = dep.dependenciesState;\n        }\n    }\n    observing.length = i0;\n    derivation.newObserving = null; // newObserving shouldn't be needed outside tracking (statement moved down to work around FF bug, see #614)\n    // Go through all old observables and check diffValue: (it is unique after last bindDependencies)\n    //   0: it's not in new observables, unobserve it\n    //   1: it keeps being observed, don't want to notify it. change to 0\n    l = prevObserving.length;\n    while (l--) {\n        var dep = prevObserving[l];\n        if (dep.diffValue === 0) {\n            removeObserver(dep, derivation);\n        }\n        dep.diffValue = 0;\n    }\n    // Go through all new observables and check diffValue: (now it should be unique)\n    //   0: it was set to 0 in last loop. don't need to do anything.\n    //   1: it wasn't observed, let's observe it. set back to 0\n    while (i0--) {\n        var dep = observing[i0];\n        if (dep.diffValue === 1) {\n            dep.diffValue = 0;\n            addObserver(dep, derivation);\n        }\n    }\n    // Some new observed derivations may become stale during this derivation computation\n    // so they have had no chance to propagate staleness (#916)\n    if (lowestNewObservingDerivationState !== IDerivationState.UP_TO_DATE) {\n        derivation.dependenciesState = lowestNewObservingDerivationState;\n        derivation.onBecomeStale();\n    }\n}\nfunction clearObserving(derivation) {\n    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR clearObserving should be called only inside batch\");\n    var obs = derivation.observing;\n    derivation.observing = [];\n    var i = obs.length;\n    while (i--)\n        removeObserver(obs[i], derivation);\n    derivation.dependenciesState = IDerivationState.NOT_TRACKING;\n}\nfunction untracked(action) {\n    var prev = untrackedStart();\n    try {\n        return action();\n    }\n    finally {\n        untrackedEnd(prev);\n    }\n}\nfunction untrackedStart() {\n    var prev = globalState.trackingDerivation;\n    globalState.trackingDerivation = null;\n    return prev;\n}\nfunction untrackedEnd(prev) {\n    globalState.trackingDerivation = prev;\n}\nfunction allowStateReadsStart(allowStateReads) {\n    var prev = globalState.allowStateReads;\n    globalState.allowStateReads = allowStateReads;\n    return prev;\n}\nfunction allowStateReadsEnd(prev) {\n    globalState.allowStateReads = prev;\n}\n/**\n * needed to keep `lowestObserverState` correct. when changing from (2 or 1) to 0\n *\n */\nfunction changeDependenciesStateTo0(derivation) {\n    if (derivation.dependenciesState === IDerivationState.UP_TO_DATE)\n        return;\n    derivation.dependenciesState = IDerivationState.UP_TO_DATE;\n    var obs = derivation.observing;\n    var i = obs.length;\n    while (i--)\n        obs[i].lowestObserverState = IDerivationState.UP_TO_DATE;\n}\n\n// we don't use globalState for these in order to avoid possible issues with multiple\n// mobx versions\nvar currentActionId = 0;\nvar nextActionId = 1;\nfunction createAction(actionName, fn, ref) {\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(typeof fn === \"function\", \"`action` can only be invoked on functions\");\n        if (typeof actionName !== \"string\" || !actionName)\n            fail(\"actions should have valid names, got: '\" + actionName + \"'\");\n    }\n    var res = function () {\n        return executeAction(actionName, fn, ref || this, arguments);\n    };\n    res.isMobxAction = true;\n    return res;\n}\nfunction executeAction(actionName, fn, scope, args) {\n    var runInfo = _startAction(actionName, scope, args);\n    try {\n        return fn.apply(scope, args);\n    }\n    catch (err) {\n        runInfo.error = err;\n        throw err;\n    }\n    finally {\n        _endAction(runInfo);\n    }\n}\nfunction _startAction(actionName, scope, args) {\n    var notifySpy = isSpyEnabled() && !!actionName;\n    var startTime = 0;\n    if (notifySpy && process.env.NODE_ENV !== \"production\") {\n        startTime = Date.now();\n        var l = (args && args.length) || 0;\n        var flattendArgs = new Array(l);\n        if (l > 0)\n            for (var i = 0; i < l; i++)\n                flattendArgs[i] = args[i];\n        spyReportStart({\n            type: \"action\",\n            name: actionName,\n            object: scope,\n            arguments: flattendArgs\n        });\n    }\n    var prevDerivation = untrackedStart();\n    startBatch();\n    var prevAllowStateChanges = allowStateChangesStart(true);\n    var prevAllowStateReads = allowStateReadsStart(true);\n    var runInfo = {\n        prevDerivation: prevDerivation,\n        prevAllowStateChanges: prevAllowStateChanges,\n        prevAllowStateReads: prevAllowStateReads,\n        notifySpy: notifySpy,\n        startTime: startTime,\n        actionId: nextActionId++,\n        parentActionId: currentActionId\n    };\n    currentActionId = runInfo.actionId;\n    return runInfo;\n}\nfunction _endAction(runInfo) {\n    if (currentActionId !== runInfo.actionId) {\n        fail(\"invalid action stack. did you forget to finish an action?\");\n    }\n    currentActionId = runInfo.parentActionId;\n    if (runInfo.error !== undefined) {\n        globalState.suppressReactionErrors = true;\n    }\n    allowStateChangesEnd(runInfo.prevAllowStateChanges);\n    allowStateReadsEnd(runInfo.prevAllowStateReads);\n    endBatch();\n    untrackedEnd(runInfo.prevDerivation);\n    if (runInfo.notifySpy && process.env.NODE_ENV !== \"production\") {\n        spyReportEnd({ time: Date.now() - runInfo.startTime });\n    }\n    globalState.suppressReactionErrors = false;\n}\nfunction allowStateChanges(allowStateChanges, func) {\n    var prev = allowStateChangesStart(allowStateChanges);\n    var res;\n    try {\n        res = func();\n    }\n    finally {\n        allowStateChangesEnd(prev);\n    }\n    return res;\n}\nfunction allowStateChangesStart(allowStateChanges) {\n    var prev = globalState.allowStateChanges;\n    globalState.allowStateChanges = allowStateChanges;\n    return prev;\n}\nfunction allowStateChangesEnd(prev) {\n    globalState.allowStateChanges = prev;\n}\nfunction allowStateChangesInsideComputed(func) {\n    var prev = globalState.computationDepth;\n    globalState.computationDepth = 0;\n    var res;\n    try {\n        res = func();\n    }\n    finally {\n        globalState.computationDepth = prev;\n    }\n    return res;\n}\n\nvar ObservableValue = /** @class */ (function (_super) {\n    __extends(ObservableValue, _super);\n    function ObservableValue(value, enhancer, name, notifySpy, equals) {\n        if (name === void 0) { name = \"ObservableValue@\" + getNextId(); }\n        if (notifySpy === void 0) { notifySpy = true; }\n        if (equals === void 0) { equals = comparer.default; }\n        var _this = _super.call(this, name) || this;\n        _this.enhancer = enhancer;\n        _this.name = name;\n        _this.equals = equals;\n        _this.hasUnreportedChange = false;\n        _this.value = enhancer(value, undefined, name);\n        if (notifySpy && isSpyEnabled() && process.env.NODE_ENV !== \"production\") {\n            // only notify spy if this is a stand-alone observable\n            spyReport({ type: \"create\", name: _this.name, newValue: \"\" + _this.value });\n        }\n        return _this;\n    }\n    ObservableValue.prototype.dehanceValue = function (value) {\n        if (this.dehancer !== undefined)\n            return this.dehancer(value);\n        return value;\n    };\n    ObservableValue.prototype.set = function (newValue) {\n        var oldValue = this.value;\n        newValue = this.prepareNewValue(newValue);\n        if (newValue !== globalState.UNCHANGED) {\n            var notifySpy = isSpyEnabled();\n            if (notifySpy && process.env.NODE_ENV !== \"production\") {\n                spyReportStart({\n                    type: \"update\",\n                    name: this.name,\n                    newValue: newValue,\n                    oldValue: oldValue\n                });\n            }\n            this.setNewValue(newValue);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n        }\n    };\n    ObservableValue.prototype.prepareNewValue = function (newValue) {\n        checkIfStateModificationsAreAllowed(this);\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, {\n                object: this,\n                type: \"update\",\n                newValue: newValue\n            });\n            if (!change)\n                return globalState.UNCHANGED;\n            newValue = change.newValue;\n        }\n        // apply modifier\n        newValue = this.enhancer(newValue, this.value, this.name);\n        return this.equals(this.value, newValue) ? globalState.UNCHANGED : newValue;\n    };\n    ObservableValue.prototype.setNewValue = function (newValue) {\n        var oldValue = this.value;\n        this.value = newValue;\n        this.reportChanged();\n        if (hasListeners(this)) {\n            notifyListeners(this, {\n                type: \"update\",\n                object: this,\n                newValue: newValue,\n                oldValue: oldValue\n            });\n        }\n    };\n    ObservableValue.prototype.get = function () {\n        this.reportObserved();\n        return this.dehanceValue(this.value);\n    };\n    ObservableValue.prototype.intercept = function (handler) {\n        return registerInterceptor(this, handler);\n    };\n    ObservableValue.prototype.observe = function (listener, fireImmediately) {\n        if (fireImmediately)\n            listener({\n                object: this,\n                type: \"update\",\n                newValue: this.value,\n                oldValue: undefined\n            });\n        return registerListener(this, listener);\n    };\n    ObservableValue.prototype.toJSON = function () {\n        return this.get();\n    };\n    ObservableValue.prototype.toString = function () {\n        return this.name + \"[\" + this.value + \"]\";\n    };\n    ObservableValue.prototype.valueOf = function () {\n        return toPrimitive(this.get());\n    };\n    ObservableValue.prototype[Symbol.toPrimitive] = function () {\n        return this.valueOf();\n    };\n    return ObservableValue;\n}(Atom));\nvar isObservableValue = createInstanceofPredicate(\"ObservableValue\", ObservableValue);\n\n/**\n * A node in the state dependency root that observes other nodes, and can be observed itself.\n *\n * ComputedValue will remember the result of the computation for the duration of the batch, or\n * while being observed.\n *\n * During this time it will recompute only when one of its direct dependencies changed,\n * but only when it is being accessed with `ComputedValue.get()`.\n *\n * Implementation description:\n * 1. First time it's being accessed it will compute and remember result\n *    give back remembered result until 2. happens\n * 2. First time any deep dependency change, propagate POSSIBLY_STALE to all observers, wait for 3.\n * 3. When it's being accessed, recompute if any shallow dependency changed.\n *    if result changed: propagate STALE to all observers, that were POSSIBLY_STALE from the last step.\n *    go to step 2. either way\n *\n * If at any point it's outside batch and it isn't observed: reset everything and go to 1.\n */\nvar ComputedValue = /** @class */ (function () {\n    /**\n     * Create a new computed value based on a function expression.\n     *\n     * The `name` property is for debug purposes only.\n     *\n     * The `equals` property specifies the comparer function to use to determine if a newly produced\n     * value differs from the previous value. Two comparers are provided in the library; `defaultComparer`\n     * compares based on identity comparison (===), and `structualComparer` deeply compares the structure.\n     * Structural comparison can be convenient if you always produce a new aggregated object and\n     * don't want to notify observers if it is structurally the same.\n     * This is useful for working with vectors, mouse coordinates etc.\n     */\n    function ComputedValue(options) {\n        this.dependenciesState = IDerivationState.NOT_TRACKING;\n        this.observing = []; // nodes we are looking at. Our value depends on these nodes\n        this.newObserving = null; // during tracking it's an array with new observed observers\n        this.isBeingObserved = false;\n        this.isPendingUnobservation = false;\n        this.observers = new Set();\n        this.diffValue = 0;\n        this.runId = 0;\n        this.lastAccessedBy = 0;\n        this.lowestObserverState = IDerivationState.UP_TO_DATE;\n        this.unboundDepsCount = 0;\n        this.__mapid = \"#\" + getNextId();\n        this.value = new CaughtException(null);\n        this.isComputing = false; // to check for cycles\n        this.isRunningSetter = false;\n        this.isTracing = TraceMode.NONE;\n        if (process.env.NODE_ENV !== \"production\" && !options.get)\n            throw \"[mobx] missing option for computed: get\";\n        this.derivation = options.get;\n        this.name = options.name || \"ComputedValue@\" + getNextId();\n        if (options.set)\n            this.setter = createAction(this.name + \"-setter\", options.set);\n        this.equals =\n            options.equals ||\n                (options.compareStructural || options.struct\n                    ? comparer.structural\n                    : comparer.default);\n        this.scope = options.context;\n        this.requiresReaction = !!options.requiresReaction;\n        this.keepAlive = !!options.keepAlive;\n    }\n    ComputedValue.prototype.onBecomeStale = function () {\n        propagateMaybeChanged(this);\n    };\n    ComputedValue.prototype.onBecomeObserved = function () {\n        if (this.onBecomeObservedListeners) {\n            this.onBecomeObservedListeners.forEach(function (listener) { return listener(); });\n        }\n    };\n    ComputedValue.prototype.onBecomeUnobserved = function () {\n        if (this.onBecomeUnobservedListeners) {\n            this.onBecomeUnobservedListeners.forEach(function (listener) { return listener(); });\n        }\n    };\n    /**\n     * Returns the current value of this computed value.\n     * Will evaluate its computation first if needed.\n     */\n    ComputedValue.prototype.get = function () {\n        if (this.isComputing)\n            fail(\"Cycle detected in computation \" + this.name + \": \" + this.derivation);\n        if (globalState.inBatch === 0 && this.observers.size === 0 && !this.keepAlive) {\n            if (shouldCompute(this)) {\n                this.warnAboutUntrackedRead();\n                startBatch(); // See perf test 'computed memoization'\n                this.value = this.computeValue(false);\n                endBatch();\n            }\n        }\n        else {\n            reportObserved(this);\n            if (shouldCompute(this))\n                if (this.trackAndCompute())\n                    propagateChangeConfirmed(this);\n        }\n        var result = this.value;\n        if (isCaughtException(result))\n            throw result.cause;\n        return result;\n    };\n    ComputedValue.prototype.peek = function () {\n        var res = this.computeValue(false);\n        if (isCaughtException(res))\n            throw res.cause;\n        return res;\n    };\n    ComputedValue.prototype.set = function (value) {\n        if (this.setter) {\n            invariant(!this.isRunningSetter, \"The setter of computed value '\" + this.name + \"' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?\");\n            this.isRunningSetter = true;\n            try {\n                this.setter.call(this.scope, value);\n            }\n            finally {\n                this.isRunningSetter = false;\n            }\n        }\n        else\n            invariant(false, process.env.NODE_ENV !== \"production\" &&\n                \"[ComputedValue '\" + this.name + \"'] It is not possible to assign a new value to a computed value.\");\n    };\n    ComputedValue.prototype.trackAndCompute = function () {\n        if (isSpyEnabled() && process.env.NODE_ENV !== \"production\") {\n            spyReport({\n                object: this.scope,\n                type: \"compute\",\n                name: this.name\n            });\n        }\n        var oldValue = this.value;\n        var wasSuspended = \n        /* see #1208 */ this.dependenciesState === IDerivationState.NOT_TRACKING;\n        var newValue = this.computeValue(true);\n        var changed = wasSuspended ||\n            isCaughtException(oldValue) ||\n            isCaughtException(newValue) ||\n            !this.equals(oldValue, newValue);\n        if (changed) {\n            this.value = newValue;\n        }\n        return changed;\n    };\n    ComputedValue.prototype.computeValue = function (track) {\n        this.isComputing = true;\n        globalState.computationDepth++;\n        var res;\n        if (track) {\n            res = trackDerivedFunction(this, this.derivation, this.scope);\n        }\n        else {\n            if (globalState.disableErrorBoundaries === true) {\n                res = this.derivation.call(this.scope);\n            }\n            else {\n                try {\n                    res = this.derivation.call(this.scope);\n                }\n                catch (e) {\n                    res = new CaughtException(e);\n                }\n            }\n        }\n        globalState.computationDepth--;\n        this.isComputing = false;\n        return res;\n    };\n    ComputedValue.prototype.suspend = function () {\n        if (!this.keepAlive) {\n            clearObserving(this);\n            this.value = undefined; // don't hold on to computed value!\n        }\n    };\n    ComputedValue.prototype.observe = function (listener, fireImmediately) {\n        var _this = this;\n        var firstTime = true;\n        var prevValue = undefined;\n        return autorun(function () {\n            var newValue = _this.get();\n            if (!firstTime || fireImmediately) {\n                var prevU = untrackedStart();\n                listener({\n                    type: \"update\",\n                    object: _this,\n                    newValue: newValue,\n                    oldValue: prevValue\n                });\n                untrackedEnd(prevU);\n            }\n            firstTime = false;\n            prevValue = newValue;\n        });\n    };\n    ComputedValue.prototype.warnAboutUntrackedRead = function () {\n        if (process.env.NODE_ENV === \"production\")\n            return;\n        if (this.requiresReaction === true) {\n            fail(\"[mobx] Computed value \" + this.name + \" is read outside a reactive context\");\n        }\n        if (this.isTracing !== TraceMode.NONE) {\n            console.log(\"[mobx.trace] '\" + this.name + \"' is being read outside a reactive context. Doing a full recompute\");\n        }\n        if (globalState.computedRequiresReaction) {\n            console.warn(\"[mobx] Computed value \" + this.name + \" is being read outside a reactive context. Doing a full recompute\");\n        }\n    };\n    ComputedValue.prototype.toJSON = function () {\n        return this.get();\n    };\n    ComputedValue.prototype.toString = function () {\n        return this.name + \"[\" + this.derivation.toString() + \"]\";\n    };\n    ComputedValue.prototype.valueOf = function () {\n        return toPrimitive(this.get());\n    };\n    ComputedValue.prototype[Symbol.toPrimitive] = function () {\n        return this.valueOf();\n    };\n    return ComputedValue;\n}());\nvar isComputedValue = createInstanceofPredicate(\"ComputedValue\", ComputedValue);\n\n/**\n * These values will persist if global state is reset\n */\nvar persistentKeys = [\n    \"mobxGuid\",\n    \"spyListeners\",\n    \"enforceActions\",\n    \"computedRequiresReaction\",\n    \"reactionRequiresObservable\",\n    \"observableRequiresReaction\",\n    \"allowStateReads\",\n    \"disableErrorBoundaries\",\n    \"runId\",\n    \"UNCHANGED\"\n];\nvar MobXGlobals = /** @class */ (function () {\n    function MobXGlobals() {\n        /**\n         * MobXGlobals version.\n         * MobX compatiblity with other versions loaded in memory as long as this version matches.\n         * It indicates that the global state still stores similar information\n         *\n         * N.B: this version is unrelated to the package version of MobX, and is only the version of the\n         * internal state storage of MobX, and can be the same across many different package versions\n         */\n        this.version = 5;\n        /**\n         * globally unique token to signal unchanged\n         */\n        this.UNCHANGED = {};\n        /**\n         * Currently running derivation\n         */\n        this.trackingDerivation = null;\n        /**\n         * Are we running a computation currently? (not a reaction)\n         */\n        this.computationDepth = 0;\n        /**\n         * Each time a derivation is tracked, it is assigned a unique run-id\n         */\n        this.runId = 0;\n        /**\n         * 'guid' for general purpose. Will be persisted amongst resets.\n         */\n        this.mobxGuid = 0;\n        /**\n         * Are we in a batch block? (and how many of them)\n         */\n        this.inBatch = 0;\n        /**\n         * Observables that don't have observers anymore, and are about to be\n         * suspended, unless somebody else accesses it in the same batch\n         *\n         * @type {IObservable[]}\n         */\n        this.pendingUnobservations = [];\n        /**\n         * List of scheduled, not yet executed, reactions.\n         */\n        this.pendingReactions = [];\n        /**\n         * Are we currently processing reactions?\n         */\n        this.isRunningReactions = false;\n        /**\n         * Is it allowed to change observables at this point?\n         * In general, MobX doesn't allow that when running computations and React.render.\n         * To ensure that those functions stay pure.\n         */\n        this.allowStateChanges = true;\n        /**\n         * Is it allowed to read observables at this point?\n         * Used to hold the state needed for `observableRequiresReaction`\n         */\n        this.allowStateReads = true;\n        /**\n         * If strict mode is enabled, state changes are by default not allowed\n         */\n        this.enforceActions = false;\n        /**\n         * Spy callbacks\n         */\n        this.spyListeners = [];\n        /**\n         * Globally attached error handlers that react specifically to errors in reactions\n         */\n        this.globalReactionErrorHandlers = [];\n        /**\n         * Warn if computed values are accessed outside a reactive context\n         */\n        this.computedRequiresReaction = false;\n        /**\n         * (Experimental)\n         * Warn if you try to create to derivation / reactive context without accessing any observable.\n         */\n        this.reactionRequiresObservable = false;\n        /**\n         * (Experimental)\n         * Warn if observables are accessed outside a reactive context\n         */\n        this.observableRequiresReaction = false;\n        /**\n         * Allows overwriting of computed properties, useful in tests but not prod as it can cause\n         * memory leaks. See https://github.com/mobxjs/mobx/issues/1867\n         */\n        this.computedConfigurable = false;\n        /*\n         * Don't catch and rethrow exceptions. This is useful for inspecting the state of\n         * the stack when an exception occurs while debugging.\n         */\n        this.disableErrorBoundaries = false;\n        /*\n         * If true, we are already handling an exception in an action. Any errors in reactions should be suppressed, as\n         * they are not the cause, see: https://github.com/mobxjs/mobx/issues/1836\n         */\n        this.suppressReactionErrors = false;\n    }\n    return MobXGlobals;\n}());\nvar mockGlobal = {};\nfunction getGlobal() {\n    if (typeof window !== \"undefined\") {\n        return window;\n    }\n    if (typeof global !== \"undefined\") {\n        return global;\n    }\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    return mockGlobal;\n}\nvar canMergeGlobalState = true;\nvar isolateCalled = false;\nvar globalState = (function () {\n    var global = getGlobal();\n    if (global.__mobxInstanceCount > 0 && !global.__mobxGlobals)\n        canMergeGlobalState = false;\n    if (global.__mobxGlobals && global.__mobxGlobals.version !== new MobXGlobals().version)\n        canMergeGlobalState = false;\n    if (!canMergeGlobalState) {\n        setTimeout(function () {\n            if (!isolateCalled) {\n                fail(\"There are multiple, different versions of MobX active. Make sure MobX is loaded only once or use `configure({ isolateGlobalState: true })`\");\n            }\n        }, 1);\n        return new MobXGlobals();\n    }\n    else if (global.__mobxGlobals) {\n        global.__mobxInstanceCount += 1;\n        if (!global.__mobxGlobals.UNCHANGED)\n            global.__mobxGlobals.UNCHANGED = {}; // make merge backward compatible\n        return global.__mobxGlobals;\n    }\n    else {\n        global.__mobxInstanceCount = 1;\n        return (global.__mobxGlobals = new MobXGlobals());\n    }\n})();\nfunction isolateGlobalState() {\n    if (globalState.pendingReactions.length ||\n        globalState.inBatch ||\n        globalState.isRunningReactions)\n        fail(\"isolateGlobalState should be called before MobX is running any reactions\");\n    isolateCalled = true;\n    if (canMergeGlobalState) {\n        if (--getGlobal().__mobxInstanceCount === 0)\n            getGlobal().__mobxGlobals = undefined;\n        globalState = new MobXGlobals();\n    }\n}\nfunction getGlobalState() {\n    return globalState;\n}\n/**\n * For testing purposes only; this will break the internal state of existing observables,\n * but can be used to get back at a stable state after throwing errors\n */\nfunction resetGlobalState() {\n    var defaultGlobals = new MobXGlobals();\n    for (var key in defaultGlobals)\n        if (persistentKeys.indexOf(key) === -1)\n            globalState[key] = defaultGlobals[key];\n    globalState.allowStateChanges = !globalState.enforceActions;\n}\n\nfunction hasObservers(observable) {\n    return observable.observers && observable.observers.size > 0;\n}\nfunction getObservers(observable) {\n    return observable.observers;\n}\n// function invariantObservers(observable: IObservable) {\n//     const list = observable.observers\n//     const map = observable.observersIndexes\n//     const l = list.length\n//     for (let i = 0; i < l; i++) {\n//         const id = list[i].__mapid\n//         if (i) {\n//             invariant(map[id] === i, \"INTERNAL ERROR maps derivation.__mapid to index in list\") // for performance\n//         } else {\n//             invariant(!(id in map), \"INTERNAL ERROR observer on index 0 shouldn't be held in map.\") // for performance\n//         }\n//     }\n//     invariant(\n//         list.length === 0 || Object.keys(map).length === list.length - 1,\n//         \"INTERNAL ERROR there is no junk in map\"\n//     )\n// }\nfunction addObserver(observable, node) {\n    // invariant(node.dependenciesState !== -1, \"INTERNAL ERROR, can add only dependenciesState !== -1\");\n    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR add already added node\");\n    // invariantObservers(observable);\n    observable.observers.add(node);\n    if (observable.lowestObserverState > node.dependenciesState)\n        observable.lowestObserverState = node.dependenciesState;\n    // invariantObservers(observable);\n    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR didn't add node\");\n}\nfunction removeObserver(observable, node) {\n    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR, remove should be called only inside batch\");\n    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR remove already removed node\");\n    // invariantObservers(observable);\n    observable.observers.delete(node);\n    if (observable.observers.size === 0) {\n        // deleting last observer\n        queueForUnobservation(observable);\n    }\n    // invariantObservers(observable);\n    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR remove already removed node2\");\n}\nfunction queueForUnobservation(observable) {\n    if (observable.isPendingUnobservation === false) {\n        // invariant(observable._observers.length === 0, \"INTERNAL ERROR, should only queue for unobservation unobserved observables\");\n        observable.isPendingUnobservation = true;\n        globalState.pendingUnobservations.push(observable);\n    }\n}\n/**\n * Batch starts a transaction, at least for purposes of memoizing ComputedValues when nothing else does.\n * During a batch `onBecomeUnobserved` will be called at most once per observable.\n * Avoids unnecessary recalculations.\n */\nfunction startBatch() {\n    globalState.inBatch++;\n}\nfunction endBatch() {\n    if (--globalState.inBatch === 0) {\n        runReactions();\n        // the batch is actually about to finish, all unobserving should happen here.\n        var list = globalState.pendingUnobservations;\n        for (var i = 0; i < list.length; i++) {\n            var observable = list[i];\n            observable.isPendingUnobservation = false;\n            if (observable.observers.size === 0) {\n                if (observable.isBeingObserved) {\n                    // if this observable had reactive observers, trigger the hooks\n                    observable.isBeingObserved = false;\n                    observable.onBecomeUnobserved();\n                }\n                if (observable instanceof ComputedValue) {\n                    // computed values are automatically teared down when the last observer leaves\n                    // this process happens recursively, this computed might be the last observabe of another, etc..\n                    observable.suspend();\n                }\n            }\n        }\n        globalState.pendingUnobservations = [];\n    }\n}\nfunction reportObserved(observable) {\n    checkIfStateReadsAreAllowed(observable);\n    var derivation = globalState.trackingDerivation;\n    if (derivation !== null) {\n        /**\n         * Simple optimization, give each derivation run an unique id (runId)\n         * Check if last time this observable was accessed the same runId is used\n         * if this is the case, the relation is already known\n         */\n        if (derivation.runId !== observable.lastAccessedBy) {\n            observable.lastAccessedBy = derivation.runId;\n            // Tried storing newObserving, or observing, or both as Set, but performance didn't come close...\n            derivation.newObserving[derivation.unboundDepsCount++] = observable;\n            if (!observable.isBeingObserved) {\n                observable.isBeingObserved = true;\n                observable.onBecomeObserved();\n            }\n        }\n        return true;\n    }\n    else if (observable.observers.size === 0 && globalState.inBatch > 0) {\n        queueForUnobservation(observable);\n    }\n    return false;\n}\n// function invariantLOS(observable: IObservable, msg: string) {\n//     // it's expensive so better not run it in produciton. but temporarily helpful for testing\n//     const min = getObservers(observable).reduce((a, b) => Math.min(a, b.dependenciesState), 2)\n//     if (min >= observable.lowestObserverState) return // <- the only assumption about `lowestObserverState`\n//     throw new Error(\n//         \"lowestObserverState is wrong for \" +\n//             msg +\n//             \" because \" +\n//             min +\n//             \" < \" +\n//             observable.lowestObserverState\n//     )\n// }\n/**\n * NOTE: current propagation mechanism will in case of self reruning autoruns behave unexpectedly\n * It will propagate changes to observers from previous run\n * It's hard or maybe impossible (with reasonable perf) to get it right with current approach\n * Hopefully self reruning autoruns aren't a feature people should depend on\n * Also most basic use cases should be ok\n */\n// Called by Atom when its value changes\nfunction propagateChanged(observable) {\n    // invariantLOS(observable, \"changed start\");\n    if (observable.lowestObserverState === IDerivationState.STALE)\n        return;\n    observable.lowestObserverState = IDerivationState.STALE;\n    // Ideally we use for..of here, but the downcompiled version is really slow...\n    observable.observers.forEach(function (d) {\n        if (d.dependenciesState === IDerivationState.UP_TO_DATE) {\n            if (d.isTracing !== TraceMode.NONE) {\n                logTraceInfo(d, observable);\n            }\n            d.onBecomeStale();\n        }\n        d.dependenciesState = IDerivationState.STALE;\n    });\n    // invariantLOS(observable, \"changed end\");\n}\n// Called by ComputedValue when it recalculate and its value changed\nfunction propagateChangeConfirmed(observable) {\n    // invariantLOS(observable, \"confirmed start\");\n    if (observable.lowestObserverState === IDerivationState.STALE)\n        return;\n    observable.lowestObserverState = IDerivationState.STALE;\n    observable.observers.forEach(function (d) {\n        if (d.dependenciesState === IDerivationState.POSSIBLY_STALE)\n            d.dependenciesState = IDerivationState.STALE;\n        else if (d.dependenciesState === IDerivationState.UP_TO_DATE // this happens during computing of `d`, just keep lowestObserverState up to date.\n        )\n            observable.lowestObserverState = IDerivationState.UP_TO_DATE;\n    });\n    // invariantLOS(observable, \"confirmed end\");\n}\n// Used by computed when its dependency changed, but we don't wan't to immediately recompute.\nfunction propagateMaybeChanged(observable) {\n    // invariantLOS(observable, \"maybe start\");\n    if (observable.lowestObserverState !== IDerivationState.UP_TO_DATE)\n        return;\n    observable.lowestObserverState = IDerivationState.POSSIBLY_STALE;\n    observable.observers.forEach(function (d) {\n        if (d.dependenciesState === IDerivationState.UP_TO_DATE) {\n            d.dependenciesState = IDerivationState.POSSIBLY_STALE;\n            if (d.isTracing !== TraceMode.NONE) {\n                logTraceInfo(d, observable);\n            }\n            d.onBecomeStale();\n        }\n    });\n    // invariantLOS(observable, \"maybe end\");\n}\nfunction logTraceInfo(derivation, observable) {\n    console.log(\"[mobx.trace] '\" + derivation.name + \"' is invalidated due to a change in: '\" + observable.name + \"'\");\n    if (derivation.isTracing === TraceMode.BREAK) {\n        var lines = [];\n        printDepTree(getDependencyTree(derivation), lines, 1);\n        // prettier-ignore\n        new Function(\"debugger;\\n/*\\nTracing '\" + derivation.name + \"'\\n\\nYou are entering this break point because derivation '\" + derivation.name + \"' is being traced and '\" + observable.name + \"' is now forcing it to update.\\nJust follow the stacktrace you should now see in the devtools to see precisely what piece of your code is causing this update\\nThe stackframe you are looking for is at least ~6-8 stack-frames up.\\n\\n\" + (derivation instanceof ComputedValue ? derivation.derivation.toString().replace(/[*]\\//g, \"/\") : \"\") + \"\\n\\nThe dependencies for this derivation are:\\n\\n\" + lines.join(\"\\n\") + \"\\n*/\\n    \")();\n    }\n}\nfunction printDepTree(tree, lines, depth) {\n    if (lines.length >= 1000) {\n        lines.push(\"(and many more)\");\n        return;\n    }\n    lines.push(\"\" + new Array(depth).join(\"\\t\") + tree.name); // MWE: not the fastest, but the easiest way :)\n    if (tree.dependencies)\n        tree.dependencies.forEach(function (child) { return printDepTree(child, lines, depth + 1); });\n}\n\nvar Reaction = /** @class */ (function () {\n    function Reaction(name, onInvalidate, errorHandler, requiresObservable) {\n        if (name === void 0) { name = \"Reaction@\" + getNextId(); }\n        if (requiresObservable === void 0) { requiresObservable = false; }\n        this.name = name;\n        this.onInvalidate = onInvalidate;\n        this.errorHandler = errorHandler;\n        this.requiresObservable = requiresObservable;\n        this.observing = []; // nodes we are looking at. Our value depends on these nodes\n        this.newObserving = [];\n        this.dependenciesState = IDerivationState.NOT_TRACKING;\n        this.diffValue = 0;\n        this.runId = 0;\n        this.unboundDepsCount = 0;\n        this.__mapid = \"#\" + getNextId();\n        this.isDisposed = false;\n        this._isScheduled = false;\n        this._isTrackPending = false;\n        this._isRunning = false;\n        this.isTracing = TraceMode.NONE;\n    }\n    Reaction.prototype.onBecomeStale = function () {\n        this.schedule();\n    };\n    Reaction.prototype.schedule = function () {\n        if (!this._isScheduled) {\n            this._isScheduled = true;\n            globalState.pendingReactions.push(this);\n            runReactions();\n        }\n    };\n    Reaction.prototype.isScheduled = function () {\n        return this._isScheduled;\n    };\n    /**\n     * internal, use schedule() if you intend to kick off a reaction\n     */\n    Reaction.prototype.runReaction = function () {\n        if (!this.isDisposed) {\n            startBatch();\n            this._isScheduled = false;\n            if (shouldCompute(this)) {\n                this._isTrackPending = true;\n                try {\n                    this.onInvalidate();\n                    if (this._isTrackPending &&\n                        isSpyEnabled() &&\n                        process.env.NODE_ENV !== \"production\") {\n                        // onInvalidate didn't trigger track right away..\n                        spyReport({\n                            name: this.name,\n                            type: \"scheduled-reaction\"\n                        });\n                    }\n                }\n                catch (e) {\n                    this.reportExceptionInDerivation(e);\n                }\n            }\n            endBatch();\n        }\n    };\n    Reaction.prototype.track = function (fn) {\n        if (this.isDisposed) {\n            return;\n            // console.warn(\"Reaction already disposed\") // Note: Not a warning / error in mobx 4 either\n        }\n        startBatch();\n        var notify = isSpyEnabled();\n        var startTime;\n        if (notify && process.env.NODE_ENV !== \"production\") {\n            startTime = Date.now();\n            spyReportStart({\n                name: this.name,\n                type: \"reaction\"\n            });\n        }\n        this._isRunning = true;\n        var result = trackDerivedFunction(this, fn, undefined);\n        this._isRunning = false;\n        this._isTrackPending = false;\n        if (this.isDisposed) {\n            // disposed during last run. Clean up everything that was bound after the dispose call.\n            clearObserving(this);\n        }\n        if (isCaughtException(result))\n            this.reportExceptionInDerivation(result.cause);\n        if (notify && process.env.NODE_ENV !== \"production\") {\n            spyReportEnd({\n                time: Date.now() - startTime\n            });\n        }\n        endBatch();\n    };\n    Reaction.prototype.reportExceptionInDerivation = function (error) {\n        var _this = this;\n        if (this.errorHandler) {\n            this.errorHandler(error, this);\n            return;\n        }\n        if (globalState.disableErrorBoundaries)\n            throw error;\n        var message = \"[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '\" + this + \"'\";\n        if (globalState.suppressReactionErrors) {\n            console.warn(\"[mobx] (error in reaction '\" + this.name + \"' suppressed, fix error of causing action below)\"); // prettier-ignore\n        }\n        else {\n            console.error(message, error);\n            /** If debugging brought you here, please, read the above message :-). Tnx! */\n        }\n        if (isSpyEnabled()) {\n            spyReport({\n                type: \"error\",\n                name: this.name,\n                message: message,\n                error: \"\" + error\n            });\n        }\n        globalState.globalReactionErrorHandlers.forEach(function (f) { return f(error, _this); });\n    };\n    Reaction.prototype.dispose = function () {\n        if (!this.isDisposed) {\n            this.isDisposed = true;\n            if (!this._isRunning) {\n                // if disposed while running, clean up later. Maybe not optimal, but rare case\n                startBatch();\n                clearObserving(this);\n                endBatch();\n            }\n        }\n    };\n    Reaction.prototype.getDisposer = function () {\n        var r = this.dispose.bind(this);\n        r[$mobx] = this;\n        return r;\n    };\n    Reaction.prototype.toString = function () {\n        return \"Reaction[\" + this.name + \"]\";\n    };\n    Reaction.prototype.trace = function (enterBreakPoint) {\n        if (enterBreakPoint === void 0) { enterBreakPoint = false; }\n        trace(this, enterBreakPoint);\n    };\n    return Reaction;\n}());\nfunction onReactionError(handler) {\n    globalState.globalReactionErrorHandlers.push(handler);\n    return function () {\n        var idx = globalState.globalReactionErrorHandlers.indexOf(handler);\n        if (idx >= 0)\n            globalState.globalReactionErrorHandlers.splice(idx, 1);\n    };\n}\n/**\n * Magic number alert!\n * Defines within how many times a reaction is allowed to re-trigger itself\n * until it is assumed that this is gonna be a never ending loop...\n */\nvar MAX_REACTION_ITERATIONS = 100;\nvar reactionScheduler = function (f) { return f(); };\nfunction runReactions() {\n    // Trampolining, if runReactions are already running, new reactions will be picked up\n    if (globalState.inBatch > 0 || globalState.isRunningReactions)\n        return;\n    reactionScheduler(runReactionsHelper);\n}\nfunction runReactionsHelper() {\n    globalState.isRunningReactions = true;\n    var allReactions = globalState.pendingReactions;\n    var iterations = 0;\n    // While running reactions, new reactions might be triggered.\n    // Hence we work with two variables and check whether\n    // we converge to no remaining reactions after a while.\n    while (allReactions.length > 0) {\n        if (++iterations === MAX_REACTION_ITERATIONS) {\n            console.error(\"Reaction doesn't converge to a stable state after \" + MAX_REACTION_ITERATIONS + \" iterations.\" +\n                (\" Probably there is a cycle in the reactive function: \" + allReactions[0]));\n            allReactions.splice(0); // clear reactions\n        }\n        var remainingReactions = allReactions.splice(0);\n        for (var i = 0, l = remainingReactions.length; i < l; i++)\n            remainingReactions[i].runReaction();\n    }\n    globalState.isRunningReactions = false;\n}\nvar isReaction = createInstanceofPredicate(\"Reaction\", Reaction);\nfunction setReactionScheduler(fn) {\n    var baseScheduler = reactionScheduler;\n    reactionScheduler = function (f) { return fn(function () { return baseScheduler(f); }); };\n}\n\nfunction isSpyEnabled() {\n    return process.env.NODE_ENV !== \"production\" && !!globalState.spyListeners.length;\n}\nfunction spyReport(event) {\n    if (process.env.NODE_ENV === \"production\")\n        return; // dead code elimination can do the rest\n    if (!globalState.spyListeners.length)\n        return;\n    var listeners = globalState.spyListeners;\n    for (var i = 0, l = listeners.length; i < l; i++)\n        listeners[i](event);\n}\nfunction spyReportStart(event) {\n    if (process.env.NODE_ENV === \"production\")\n        return;\n    var change = __assign(__assign({}, event), { spyReportStart: true });\n    spyReport(change);\n}\nvar END_EVENT = { spyReportEnd: true };\nfunction spyReportEnd(change) {\n    if (process.env.NODE_ENV === \"production\")\n        return;\n    if (change)\n        spyReport(__assign(__assign({}, change), { spyReportEnd: true }));\n    else\n        spyReport(END_EVENT);\n}\nfunction spy(listener) {\n    if (process.env.NODE_ENV === \"production\") {\n        console.warn(\"[mobx.spy] Is a no-op in production builds\");\n        return function () { };\n    }\n    else {\n        globalState.spyListeners.push(listener);\n        return once(function () {\n            globalState.spyListeners = globalState.spyListeners.filter(function (l) { return l !== listener; });\n        });\n    }\n}\n\nfunction dontReassignFields() {\n    fail(process.env.NODE_ENV !== \"production\" && \"@action fields are not reassignable\");\n}\nfunction namedActionDecorator(name) {\n    return function (target, prop, descriptor) {\n        if (descriptor) {\n            if (process.env.NODE_ENV !== \"production\" && descriptor.get !== undefined) {\n                return fail(\"@action cannot be used with getters\");\n            }\n            // babel / typescript\n            // @action method() { }\n            if (descriptor.value) {\n                // typescript\n                return {\n                    value: createAction(name, descriptor.value),\n                    enumerable: false,\n                    configurable: true,\n                    writable: true // for typescript, this must be writable, otherwise it cannot inherit :/ (see inheritable actions test)\n                };\n            }\n            // babel only: @action method = () => {}\n            var initializer_1 = descriptor.initializer;\n            return {\n                enumerable: false,\n                configurable: true,\n                writable: true,\n                initializer: function () {\n                    // N.B: we can't immediately invoke initializer; this would be wrong\n                    return createAction(name, initializer_1.call(this));\n                }\n            };\n        }\n        // bound instance methods\n        return actionFieldDecorator(name).apply(this, arguments);\n    };\n}\nfunction actionFieldDecorator(name) {\n    // Simple property that writes on first invocation to the current instance\n    return function (target, prop, descriptor) {\n        Object.defineProperty(target, prop, {\n            configurable: true,\n            enumerable: false,\n            get: function () {\n                return undefined;\n            },\n            set: function (value) {\n                addHiddenProp(this, prop, action(name, value));\n            }\n        });\n    };\n}\nfunction boundActionDecorator(target, propertyName, descriptor, applyToInstance) {\n    if (applyToInstance === true) {\n        defineBoundAction(target, propertyName, descriptor.value);\n        return null;\n    }\n    if (descriptor) {\n        // if (descriptor.value)\n        // Typescript / Babel: @action.bound method() { }\n        // also: babel @action.bound method = () => {}\n        return {\n            configurable: true,\n            enumerable: false,\n            get: function () {\n                defineBoundAction(this, propertyName, descriptor.value || descriptor.initializer.call(this));\n                return this[propertyName];\n            },\n            set: dontReassignFields\n        };\n    }\n    // field decorator Typescript @action.bound method = () => {}\n    return {\n        enumerable: false,\n        configurable: true,\n        set: function (v) {\n            defineBoundAction(this, propertyName, v);\n        },\n        get: function () {\n            return undefined;\n        }\n    };\n}\n\nvar action = function action(arg1, arg2, arg3, arg4) {\n    // action(fn() {})\n    if (arguments.length === 1 && typeof arg1 === \"function\")\n        return createAction(arg1.name || \"<unnamed action>\", arg1);\n    // action(\"name\", fn() {})\n    if (arguments.length === 2 && typeof arg2 === \"function\")\n        return createAction(arg1, arg2);\n    // @action(\"name\") fn() {}\n    if (arguments.length === 1 && typeof arg1 === \"string\")\n        return namedActionDecorator(arg1);\n    // @action fn() {}\n    if (arg4 === true) {\n        // apply to instance immediately\n        addHiddenProp(arg1, arg2, createAction(arg1.name || arg2, arg3.value, this));\n    }\n    else {\n        return namedActionDecorator(arg2).apply(null, arguments);\n    }\n};\naction.bound = boundActionDecorator;\nfunction runInAction(arg1, arg2) {\n    var actionName = typeof arg1 === \"string\" ? arg1 : arg1.name || \"<unnamed action>\";\n    var fn = typeof arg1 === \"function\" ? arg1 : arg2;\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(typeof fn === \"function\" && fn.length === 0, \"`runInAction` expects a function without arguments\");\n        if (typeof actionName !== \"string\" || !actionName)\n            fail(\"actions should have valid names, got: '\" + actionName + \"'\");\n    }\n    return executeAction(actionName, fn, this, undefined);\n}\nfunction isAction(thing) {\n    return typeof thing === \"function\" && thing.isMobxAction === true;\n}\nfunction defineBoundAction(target, propertyName, fn) {\n    addHiddenProp(target, propertyName, createAction(propertyName, fn.bind(target)));\n}\n\n/**\n * Creates a named reactive view and keeps it alive, so that the view is always\n * updated if one of the dependencies changes, even when the view is not further used by something else.\n * @param view The reactive view\n * @returns disposer function, which can be used to stop the view from being updated in the future.\n */\nfunction autorun(view, opts) {\n    if (opts === void 0) { opts = EMPTY_OBJECT; }\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(typeof view === \"function\", \"Autorun expects a function as first argument\");\n        invariant(isAction(view) === false, \"Autorun does not accept actions since actions are untrackable\");\n    }\n    var name = (opts && opts.name) || view.name || \"Autorun@\" + getNextId();\n    var runSync = !opts.scheduler && !opts.delay;\n    var reaction;\n    if (runSync) {\n        // normal autorun\n        reaction = new Reaction(name, function () {\n            this.track(reactionRunner);\n        }, opts.onError, opts.requiresObservable);\n    }\n    else {\n        var scheduler_1 = createSchedulerFromOptions(opts);\n        // debounced autorun\n        var isScheduled_1 = false;\n        reaction = new Reaction(name, function () {\n            if (!isScheduled_1) {\n                isScheduled_1 = true;\n                scheduler_1(function () {\n                    isScheduled_1 = false;\n                    if (!reaction.isDisposed)\n                        reaction.track(reactionRunner);\n                });\n            }\n        }, opts.onError, opts.requiresObservable);\n    }\n    function reactionRunner() {\n        view(reaction);\n    }\n    reaction.schedule();\n    return reaction.getDisposer();\n}\nvar run = function (f) { return f(); };\nfunction createSchedulerFromOptions(opts) {\n    return opts.scheduler\n        ? opts.scheduler\n        : opts.delay\n            ? function (f) { return setTimeout(f, opts.delay); }\n            : run;\n}\nfunction reaction(expression, effect, opts) {\n    if (opts === void 0) { opts = EMPTY_OBJECT; }\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(typeof expression === \"function\", \"First argument to reaction should be a function\");\n        invariant(typeof opts === \"object\", \"Third argument of reactions should be an object\");\n    }\n    var name = opts.name || \"Reaction@\" + getNextId();\n    var effectAction = action(name, opts.onError ? wrapErrorHandler(opts.onError, effect) : effect);\n    var runSync = !opts.scheduler && !opts.delay;\n    var scheduler = createSchedulerFromOptions(opts);\n    var firstTime = true;\n    var isScheduled = false;\n    var value;\n    var equals = opts.compareStructural\n        ? comparer.structural\n        : opts.equals || comparer.default;\n    var r = new Reaction(name, function () {\n        if (firstTime || runSync) {\n            reactionRunner();\n        }\n        else if (!isScheduled) {\n            isScheduled = true;\n            scheduler(reactionRunner);\n        }\n    }, opts.onError, opts.requiresObservable);\n    function reactionRunner() {\n        isScheduled = false; // Q: move into reaction runner?\n        if (r.isDisposed)\n            return;\n        var changed = false;\n        r.track(function () {\n            var nextValue = expression(r);\n            changed = firstTime || !equals(value, nextValue);\n            value = nextValue;\n        });\n        if (firstTime && opts.fireImmediately)\n            effectAction(value, r);\n        if (!firstTime && changed === true)\n            effectAction(value, r);\n        if (firstTime)\n            firstTime = false;\n    }\n    r.schedule();\n    return r.getDisposer();\n}\nfunction wrapErrorHandler(errorHandler, baseFn) {\n    return function () {\n        try {\n            return baseFn.apply(this, arguments);\n        }\n        catch (e) {\n            errorHandler.call(this, e);\n        }\n    };\n}\n\nfunction onBecomeObserved(thing, arg2, arg3) {\n    return interceptHook(\"onBecomeObserved\", thing, arg2, arg3);\n}\nfunction onBecomeUnobserved(thing, arg2, arg3) {\n    return interceptHook(\"onBecomeUnobserved\", thing, arg2, arg3);\n}\nfunction interceptHook(hook, thing, arg2, arg3) {\n    var atom = typeof arg3 === \"function\" ? getAtom(thing, arg2) : getAtom(thing);\n    var cb = typeof arg3 === \"function\" ? arg3 : arg2;\n    var listenersKey = hook + \"Listeners\";\n    if (atom[listenersKey]) {\n        atom[listenersKey].add(cb);\n    }\n    else {\n        atom[listenersKey] = new Set([cb]);\n    }\n    var orig = atom[hook];\n    if (typeof orig !== \"function\")\n        return fail(process.env.NODE_ENV !== \"production\" && \"Not an atom that can be (un)observed\");\n    return function () {\n        var hookListeners = atom[listenersKey];\n        if (hookListeners) {\n            hookListeners.delete(cb);\n            if (hookListeners.size === 0) {\n                delete atom[listenersKey];\n            }\n        }\n    };\n}\n\nfunction configure(options) {\n    var enforceActions = options.enforceActions, computedRequiresReaction = options.computedRequiresReaction, computedConfigurable = options.computedConfigurable, disableErrorBoundaries = options.disableErrorBoundaries, reactionScheduler = options.reactionScheduler, reactionRequiresObservable = options.reactionRequiresObservable, observableRequiresReaction = options.observableRequiresReaction;\n    if (options.isolateGlobalState === true) {\n        isolateGlobalState();\n    }\n    if (enforceActions !== undefined) {\n        if (typeof enforceActions === \"boolean\" || enforceActions === \"strict\")\n            deprecated(\"Deprecated value for 'enforceActions', use 'false' => '\\\"never\\\"', 'true' => '\\\"observed\\\"', '\\\"strict\\\"' => \\\"'always'\\\" instead\");\n        var ea = void 0;\n        switch (enforceActions) {\n            case true:\n            case \"observed\":\n                ea = true;\n                break;\n            case false:\n            case \"never\":\n                ea = false;\n                break;\n            case \"strict\":\n            case \"always\":\n                ea = \"strict\";\n                break;\n            default:\n                fail(\"Invalid value for 'enforceActions': '\" + enforceActions + \"', expected 'never', 'always' or 'observed'\");\n        }\n        globalState.enforceActions = ea;\n        globalState.allowStateChanges = ea === true || ea === \"strict\" ? false : true;\n    }\n    if (computedRequiresReaction !== undefined) {\n        globalState.computedRequiresReaction = !!computedRequiresReaction;\n    }\n    if (reactionRequiresObservable !== undefined) {\n        globalState.reactionRequiresObservable = !!reactionRequiresObservable;\n    }\n    if (observableRequiresReaction !== undefined) {\n        globalState.observableRequiresReaction = !!observableRequiresReaction;\n        globalState.allowStateReads = !globalState.observableRequiresReaction;\n    }\n    if (computedConfigurable !== undefined) {\n        globalState.computedConfigurable = !!computedConfigurable;\n    }\n    if (disableErrorBoundaries !== undefined) {\n        if (disableErrorBoundaries === true)\n            console.warn(\"WARNING: Debug feature only. MobX will NOT recover from errors when `disableErrorBoundaries` is enabled.\");\n        globalState.disableErrorBoundaries = !!disableErrorBoundaries;\n    }\n    if (reactionScheduler) {\n        setReactionScheduler(reactionScheduler);\n    }\n}\n\nfunction decorate(thing, decorators) {\n    process.env.NODE_ENV !== \"production\" &&\n        invariant(isPlainObject(decorators), \"Decorators should be a key value map\");\n    var target = typeof thing === \"function\" ? thing.prototype : thing;\n    var _loop_1 = function (prop) {\n        var propertyDecorators = decorators[prop];\n        if (!Array.isArray(propertyDecorators)) {\n            propertyDecorators = [propertyDecorators];\n        }\n        process.env.NODE_ENV !== \"production\" &&\n            invariant(propertyDecorators.every(function (decorator) { return typeof decorator === \"function\"; }), \"Decorate: expected a decorator function or array of decorator functions for '\" + prop + \"'\");\n        var descriptor = Object.getOwnPropertyDescriptor(target, prop);\n        var newDescriptor = propertyDecorators.reduce(function (accDescriptor, decorator) { return decorator(target, prop, accDescriptor); }, descriptor);\n        if (newDescriptor)\n            Object.defineProperty(target, prop, newDescriptor);\n    };\n    for (var prop in decorators) {\n        _loop_1(prop);\n    }\n    return thing;\n}\n\nfunction extendObservable(target, properties, decorators, options) {\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(arguments.length >= 2 && arguments.length <= 4, \"'extendObservable' expected 2-4 arguments\");\n        invariant(typeof target === \"object\", \"'extendObservable' expects an object as first argument\");\n        invariant(!isObservableMap(target), \"'extendObservable' should not be used on maps, use map.merge instead\");\n    }\n    options = asCreateObservableOptions(options);\n    var defaultDecorator = getDefaultDecoratorFromObjectOptions(options);\n    initializeInstance(target); // Fixes #1740\n    asObservableObject(target, options.name, defaultDecorator.enhancer); // make sure object is observable, even without initial props\n    if (properties)\n        extendObservableObjectWithProperties(target, properties, decorators, defaultDecorator);\n    return target;\n}\nfunction getDefaultDecoratorFromObjectOptions(options) {\n    return options.defaultDecorator || (options.deep === false ? refDecorator : deepDecorator);\n}\nfunction extendObservableObjectWithProperties(target, properties, decorators, defaultDecorator) {\n    var e_1, _a, e_2, _b;\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(!isObservable(properties), \"Extending an object with another observable (object) is not supported. Please construct an explicit propertymap, using `toJS` if need. See issue #540\");\n        if (decorators) {\n            var keys = getPlainObjectKeys(decorators);\n            try {\n                for (var keys_1 = __values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {\n                    var key = keys_1_1.value;\n                    if (!(key in properties))\n                        fail(\"Trying to declare a decorator for unspecified property '\" + stringifyKey(key) + \"'\");\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n    }\n    startBatch();\n    try {\n        var keys = getPlainObjectKeys(properties);\n        try {\n            for (var keys_2 = __values(keys), keys_2_1 = keys_2.next(); !keys_2_1.done; keys_2_1 = keys_2.next()) {\n                var key = keys_2_1.value;\n                var descriptor = Object.getOwnPropertyDescriptor(properties, key);\n                if (process.env.NODE_ENV !== \"production\") {\n                    if (!isPlainObject(properties))\n                        fail(\"'extendObservabe' only accepts plain objects as second argument\");\n                    if (Object.getOwnPropertyDescriptor(target, key))\n                        fail(\"'extendObservable' can only be used to introduce new properties. Use 'set' or 'decorate' instead. The property '\" + stringifyKey(key) + \"' already exists on '\" + target + \"'\");\n                    if (isComputed(descriptor.value))\n                        fail(\"Passing a 'computed' as initial property value is no longer supported by extendObservable. Use a getter or decorator instead\");\n                }\n                var decorator = decorators && key in decorators\n                    ? decorators[key]\n                    : descriptor.get\n                        ? computedDecorator\n                        : defaultDecorator;\n                if (process.env.NODE_ENV !== \"production\" && typeof decorator !== \"function\")\n                    fail(\"Not a valid decorator for '\" + stringifyKey(key) + \"', got: \" + decorator);\n                var resultDescriptor = decorator(target, key, descriptor, true);\n                if (resultDescriptor // otherwise, assume already applied, due to `applyToInstance`\n                )\n                    Object.defineProperty(target, key, resultDescriptor);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (keys_2_1 && !keys_2_1.done && (_b = keys_2.return)) _b.call(keys_2);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    }\n    finally {\n        endBatch();\n    }\n}\n\nfunction getDependencyTree(thing, property) {\n    return nodeToDependencyTree(getAtom(thing, property));\n}\nfunction nodeToDependencyTree(node) {\n    var result = {\n        name: node.name\n    };\n    if (node.observing && node.observing.length > 0)\n        result.dependencies = unique(node.observing).map(nodeToDependencyTree);\n    return result;\n}\nfunction getObserverTree(thing, property) {\n    return nodeToObserverTree(getAtom(thing, property));\n}\nfunction nodeToObserverTree(node) {\n    var result = {\n        name: node.name\n    };\n    if (hasObservers(node))\n        result.observers = Array.from(getObservers(node)).map(nodeToObserverTree);\n    return result;\n}\n\nvar generatorId = 0;\nfunction FlowCancellationError() {\n    this.message = \"FLOW_CANCELLED\";\n}\nFlowCancellationError.prototype = Object.create(Error.prototype);\nfunction isFlowCancellationError(error) {\n    return error instanceof FlowCancellationError;\n}\nfunction flow(generator) {\n    if (arguments.length !== 1)\n        fail(!!process.env.NODE_ENV && \"Flow expects 1 argument and cannot be used as decorator\");\n    var name = generator.name || \"<unnamed flow>\";\n    // Implementation based on https://github.com/tj/co/blob/master/index.js\n    return function () {\n        var ctx = this;\n        var args = arguments;\n        var runId = ++generatorId;\n        var gen = action(name + \" - runid: \" + runId + \" - init\", generator).apply(ctx, args);\n        var rejector;\n        var pendingPromise = undefined;\n        var promise = new Promise(function (resolve, reject) {\n            var stepId = 0;\n            rejector = reject;\n            function onFulfilled(res) {\n                pendingPromise = undefined;\n                var ret;\n                try {\n                    ret = action(name + \" - runid: \" + runId + \" - yield \" + stepId++, gen.next).call(gen, res);\n                }\n                catch (e) {\n                    return reject(e);\n                }\n                next(ret);\n            }\n            function onRejected(err) {\n                pendingPromise = undefined;\n                var ret;\n                try {\n                    ret = action(name + \" - runid: \" + runId + \" - yield \" + stepId++, gen.throw).call(gen, err);\n                }\n                catch (e) {\n                    return reject(e);\n                }\n                next(ret);\n            }\n            function next(ret) {\n                if (ret && typeof ret.then === \"function\") {\n                    // an async iterator\n                    ret.then(next, reject);\n                    return;\n                }\n                if (ret.done)\n                    return resolve(ret.value);\n                pendingPromise = Promise.resolve(ret.value);\n                return pendingPromise.then(onFulfilled, onRejected);\n            }\n            onFulfilled(undefined); // kick off the process\n        });\n        promise.cancel = action(name + \" - runid: \" + runId + \" - cancel\", function () {\n            try {\n                if (pendingPromise)\n                    cancelPromise(pendingPromise);\n                // Finally block can return (or yield) stuff..\n                var res = gen.return(undefined);\n                // eat anything that promise would do, it's cancelled!\n                var yieldedPromise = Promise.resolve(res.value);\n                yieldedPromise.then(noop, noop);\n                cancelPromise(yieldedPromise); // maybe it can be cancelled :)\n                // reject our original promise\n                rejector(new FlowCancellationError());\n            }\n            catch (e) {\n                rejector(e); // there could be a throwing finally block\n            }\n        });\n        return promise;\n    };\n}\nfunction cancelPromise(promise) {\n    if (typeof promise.cancel === \"function\")\n        promise.cancel();\n}\n\nfunction interceptReads(thing, propOrHandler, handler) {\n    var target;\n    if (isObservableMap(thing) || isObservableArray(thing) || isObservableValue(thing)) {\n        target = getAdministration(thing);\n    }\n    else if (isObservableObject(thing)) {\n        if (typeof propOrHandler !== \"string\")\n            return fail(process.env.NODE_ENV !== \"production\" &&\n                \"InterceptReads can only be used with a specific property, not with an object in general\");\n        target = getAdministration(thing, propOrHandler);\n    }\n    else {\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            \"Expected observable map, object or array as first array\");\n    }\n    if (target.dehancer !== undefined)\n        return fail(process.env.NODE_ENV !== \"production\" && \"An intercept reader was already established\");\n    target.dehancer = typeof propOrHandler === \"function\" ? propOrHandler : handler;\n    return function () {\n        target.dehancer = undefined;\n    };\n}\n\nfunction intercept(thing, propOrHandler, handler) {\n    if (typeof handler === \"function\")\n        return interceptProperty(thing, propOrHandler, handler);\n    else\n        return interceptInterceptable(thing, propOrHandler);\n}\nfunction interceptInterceptable(thing, handler) {\n    return getAdministration(thing).intercept(handler);\n}\nfunction interceptProperty(thing, property, handler) {\n    return getAdministration(thing, property).intercept(handler);\n}\n\nfunction _isComputed(value, property) {\n    if (value === null || value === undefined)\n        return false;\n    if (property !== undefined) {\n        if (isObservableObject(value) === false)\n            return false;\n        if (!value[$mobx].values.has(property))\n            return false;\n        var atom = getAtom(value, property);\n        return isComputedValue(atom);\n    }\n    return isComputedValue(value);\n}\nfunction isComputed(value) {\n    if (arguments.length > 1)\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            \"isComputed expects only 1 argument. Use isObservableProp to inspect the observability of a property\");\n    return _isComputed(value);\n}\nfunction isComputedProp(value, propName) {\n    if (typeof propName !== \"string\")\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            \"isComputed expected a property name as second argument\");\n    return _isComputed(value, propName);\n}\n\nfunction _isObservable(value, property) {\n    if (value === null || value === undefined)\n        return false;\n    if (property !== undefined) {\n        if (process.env.NODE_ENV !== \"production\" &&\n            (isObservableMap(value) || isObservableArray(value)))\n            return fail(\"isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.\");\n        if (isObservableObject(value)) {\n            return value[$mobx].values.has(property);\n        }\n        return false;\n    }\n    // For first check, see #701\n    return (isObservableObject(value) ||\n        !!value[$mobx] ||\n        isAtom(value) ||\n        isReaction(value) ||\n        isComputedValue(value));\n}\nfunction isObservable(value) {\n    if (arguments.length !== 1)\n        fail(process.env.NODE_ENV !== \"production\" &&\n            \"isObservable expects only 1 argument. Use isObservableProp to inspect the observability of a property\");\n    return _isObservable(value);\n}\nfunction isObservableProp(value, propName) {\n    if (typeof propName !== \"string\")\n        return fail(process.env.NODE_ENV !== \"production\" && \"expected a property name as second argument\");\n    return _isObservable(value, propName);\n}\n\nfunction keys(obj) {\n    if (isObservableObject(obj)) {\n        return obj[$mobx].getKeys();\n    }\n    if (isObservableMap(obj)) {\n        return Array.from(obj.keys());\n    }\n    if (isObservableSet(obj)) {\n        return Array.from(obj.keys());\n    }\n    if (isObservableArray(obj)) {\n        return obj.map(function (_, index) { return index; });\n    }\n    return fail(process.env.NODE_ENV !== \"production\" &&\n        \"'keys()' can only be used on observable objects, arrays, sets and maps\");\n}\nfunction values(obj) {\n    if (isObservableObject(obj)) {\n        return keys(obj).map(function (key) { return obj[key]; });\n    }\n    if (isObservableMap(obj)) {\n        return keys(obj).map(function (key) { return obj.get(key); });\n    }\n    if (isObservableSet(obj)) {\n        return Array.from(obj.values());\n    }\n    if (isObservableArray(obj)) {\n        return obj.slice();\n    }\n    return fail(process.env.NODE_ENV !== \"production\" &&\n        \"'values()' can only be used on observable objects, arrays, sets and maps\");\n}\nfunction entries(obj) {\n    if (isObservableObject(obj)) {\n        return keys(obj).map(function (key) { return [key, obj[key]]; });\n    }\n    if (isObservableMap(obj)) {\n        return keys(obj).map(function (key) { return [key, obj.get(key)]; });\n    }\n    if (isObservableSet(obj)) {\n        return Array.from(obj.entries());\n    }\n    if (isObservableArray(obj)) {\n        return obj.map(function (key, index) { return [index, key]; });\n    }\n    return fail(process.env.NODE_ENV !== \"production\" &&\n        \"'entries()' can only be used on observable objects, arrays and maps\");\n}\nfunction set(obj, key, value) {\n    if (arguments.length === 2 && !isObservableSet(obj)) {\n        startBatch();\n        var values_1 = key;\n        try {\n            for (var key_1 in values_1)\n                set(obj, key_1, values_1[key_1]);\n        }\n        finally {\n            endBatch();\n        }\n        return;\n    }\n    if (isObservableObject(obj)) {\n        var adm = obj[$mobx];\n        var existingObservable = adm.values.get(key);\n        if (existingObservable) {\n            adm.write(key, value);\n        }\n        else {\n            adm.addObservableProp(key, value, adm.defaultEnhancer);\n        }\n    }\n    else if (isObservableMap(obj)) {\n        obj.set(key, value);\n    }\n    else if (isObservableSet(obj)) {\n        obj.add(key);\n    }\n    else if (isObservableArray(obj)) {\n        if (typeof key !== \"number\")\n            key = parseInt(key, 10);\n        invariant(key >= 0, \"Not a valid index: '\" + key + \"'\");\n        startBatch();\n        if (key >= obj.length)\n            obj.length = key + 1;\n        obj[key] = value;\n        endBatch();\n    }\n    else {\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            \"'set()' can only be used on observable objects, arrays and maps\");\n    }\n}\nfunction remove(obj, key) {\n    if (isObservableObject(obj)) {\n        obj[$mobx].remove(key);\n    }\n    else if (isObservableMap(obj)) {\n        obj.delete(key);\n    }\n    else if (isObservableSet(obj)) {\n        obj.delete(key);\n    }\n    else if (isObservableArray(obj)) {\n        if (typeof key !== \"number\")\n            key = parseInt(key, 10);\n        invariant(key >= 0, \"Not a valid index: '\" + key + \"'\");\n        obj.splice(key, 1);\n    }\n    else {\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            \"'remove()' can only be used on observable objects, arrays and maps\");\n    }\n}\nfunction has(obj, key) {\n    if (isObservableObject(obj)) {\n        // return keys(obj).indexOf(key) >= 0\n        var adm = getAdministration(obj);\n        return adm.has(key);\n    }\n    else if (isObservableMap(obj)) {\n        return obj.has(key);\n    }\n    else if (isObservableSet(obj)) {\n        return obj.has(key);\n    }\n    else if (isObservableArray(obj)) {\n        return key >= 0 && key < obj.length;\n    }\n    else {\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            \"'has()' can only be used on observable objects, arrays and maps\");\n    }\n}\nfunction get(obj, key) {\n    if (!has(obj, key))\n        return undefined;\n    if (isObservableObject(obj)) {\n        return obj[key];\n    }\n    else if (isObservableMap(obj)) {\n        return obj.get(key);\n    }\n    else if (isObservableArray(obj)) {\n        return obj[key];\n    }\n    else {\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            \"'get()' can only be used on observable objects, arrays and maps\");\n    }\n}\n\nfunction observe(thing, propOrCb, cbOrFire, fireImmediately) {\n    if (typeof cbOrFire === \"function\")\n        return observeObservableProperty(thing, propOrCb, cbOrFire, fireImmediately);\n    else\n        return observeObservable(thing, propOrCb, cbOrFire);\n}\nfunction observeObservable(thing, listener, fireImmediately) {\n    return getAdministration(thing).observe(listener, fireImmediately);\n}\nfunction observeObservableProperty(thing, property, listener, fireImmediately) {\n    return getAdministration(thing, property).observe(listener, fireImmediately);\n}\n\nvar defaultOptions = {\n    detectCycles: true,\n    exportMapsAsObjects: true,\n    recurseEverything: false\n};\nfunction cache(map, key, value, options) {\n    if (options.detectCycles)\n        map.set(key, value);\n    return value;\n}\nfunction toJSHelper(source, options, __alreadySeen) {\n    if (!options.recurseEverything && !isObservable(source))\n        return source;\n    if (typeof source !== \"object\")\n        return source;\n    // Directly return null if source is null\n    if (source === null)\n        return null;\n    // Directly return the Date object itself if contained in the observable\n    if (source instanceof Date)\n        return source;\n    if (isObservableValue(source))\n        return toJSHelper(source.get(), options, __alreadySeen);\n    // make sure we track the keys of the object\n    if (isObservable(source))\n        keys(source);\n    var detectCycles = options.detectCycles === true;\n    if (detectCycles && source !== null && __alreadySeen.has(source)) {\n        return __alreadySeen.get(source);\n    }\n    if (isObservableArray(source) || Array.isArray(source)) {\n        var res_1 = cache(__alreadySeen, source, [], options);\n        var toAdd = source.map(function (value) { return toJSHelper(value, options, __alreadySeen); });\n        res_1.length = toAdd.length;\n        for (var i = 0, l = toAdd.length; i < l; i++)\n            res_1[i] = toAdd[i];\n        return res_1;\n    }\n    if (isObservableSet(source) || Object.getPrototypeOf(source) === Set.prototype) {\n        if (options.exportMapsAsObjects === false) {\n            var res_2 = cache(__alreadySeen, source, new Set(), options);\n            source.forEach(function (value) {\n                res_2.add(toJSHelper(value, options, __alreadySeen));\n            });\n            return res_2;\n        }\n        else {\n            var res_3 = cache(__alreadySeen, source, [], options);\n            source.forEach(function (value) {\n                res_3.push(toJSHelper(value, options, __alreadySeen));\n            });\n            return res_3;\n        }\n    }\n    if (isObservableMap(source) || Object.getPrototypeOf(source) === Map.prototype) {\n        if (options.exportMapsAsObjects === false) {\n            var res_4 = cache(__alreadySeen, source, new Map(), options);\n            source.forEach(function (value, key) {\n                res_4.set(key, toJSHelper(value, options, __alreadySeen));\n            });\n            return res_4;\n        }\n        else {\n            var res_5 = cache(__alreadySeen, source, {}, options);\n            source.forEach(function (value, key) {\n                res_5[key] = toJSHelper(value, options, __alreadySeen);\n            });\n            return res_5;\n        }\n    }\n    // Fallback to the situation that source is an ObservableObject or a plain object\n    var res = cache(__alreadySeen, source, {}, options);\n    getPlainObjectKeys(source).forEach(function (key) {\n        res[key] = toJSHelper(source[key], options, __alreadySeen);\n    });\n    return res;\n}\nfunction toJS(source, options) {\n    // backward compatibility\n    if (typeof options === \"boolean\")\n        options = { detectCycles: options };\n    if (!options)\n        options = defaultOptions;\n    options.detectCycles =\n        options.detectCycles === undefined\n            ? options.recurseEverything === true\n            : options.detectCycles === true;\n    var __alreadySeen;\n    if (options.detectCycles)\n        __alreadySeen = new Map();\n    return toJSHelper(source, options, __alreadySeen);\n}\n\nfunction trace() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var enterBreakPoint = false;\n    if (typeof args[args.length - 1] === \"boolean\")\n        enterBreakPoint = args.pop();\n    var derivation = getAtomFromArgs(args);\n    if (!derivation) {\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            \"'trace(break?)' can only be used inside a tracked computed value or a Reaction. Consider passing in the computed value or reaction explicitly\");\n    }\n    if (derivation.isTracing === TraceMode.NONE) {\n        console.log(\"[mobx.trace] '\" + derivation.name + \"' tracing enabled\");\n    }\n    derivation.isTracing = enterBreakPoint ? TraceMode.BREAK : TraceMode.LOG;\n}\nfunction getAtomFromArgs(args) {\n    switch (args.length) {\n        case 0:\n            return globalState.trackingDerivation;\n        case 1:\n            return getAtom(args[0]);\n        case 2:\n            return getAtom(args[0], args[1]);\n    }\n}\n\n/**\n * During a transaction no views are updated until the end of the transaction.\n * The transaction will be run synchronously nonetheless.\n *\n * @param action a function that updates some reactive state\n * @returns any value that was returned by the 'action' parameter.\n */\nfunction transaction(action, thisArg) {\n    if (thisArg === void 0) { thisArg = undefined; }\n    startBatch();\n    try {\n        return action.apply(thisArg);\n    }\n    finally {\n        endBatch();\n    }\n}\n\nfunction when(predicate, arg1, arg2) {\n    if (arguments.length === 1 || (arg1 && typeof arg1 === \"object\"))\n        return whenPromise(predicate, arg1);\n    return _when(predicate, arg1, arg2 || {});\n}\nfunction _when(predicate, effect, opts) {\n    var timeoutHandle;\n    if (typeof opts.timeout === \"number\") {\n        timeoutHandle = setTimeout(function () {\n            if (!disposer[$mobx].isDisposed) {\n                disposer();\n                var error = new Error(\"WHEN_TIMEOUT\");\n                if (opts.onError)\n                    opts.onError(error);\n                else\n                    throw error;\n            }\n        }, opts.timeout);\n    }\n    opts.name = opts.name || \"When@\" + getNextId();\n    var effectAction = createAction(opts.name + \"-effect\", effect);\n    var disposer = autorun(function (r) {\n        if (predicate()) {\n            r.dispose();\n            if (timeoutHandle)\n                clearTimeout(timeoutHandle);\n            effectAction();\n        }\n    }, opts);\n    return disposer;\n}\nfunction whenPromise(predicate, opts) {\n    if (process.env.NODE_ENV !== \"production\" && opts && opts.onError)\n        return fail(\"the options 'onError' and 'promise' cannot be combined\");\n    var cancel;\n    var res = new Promise(function (resolve, reject) {\n        var disposer = _when(predicate, resolve, __assign(__assign({}, opts), { onError: reject }));\n        cancel = function () {\n            disposer();\n            reject(\"WHEN_CANCELLED\");\n        };\n    });\n    res.cancel = cancel;\n    return res;\n}\n\nfunction getAdm(target) {\n    return target[$mobx];\n}\nfunction isPropertyKey(val) {\n    return typeof val === \"string\" || typeof val === \"number\" || typeof val === \"symbol\";\n}\n// Optimization: we don't need the intermediate objects and could have a completely custom administration for DynamicObjects,\n// and skip either the internal values map, or the base object with its property descriptors!\nvar objectProxyTraps = {\n    has: function (target, name) {\n        if (name === $mobx || name === \"constructor\" || name === mobxDidRunLazyInitializersSymbol)\n            return true;\n        var adm = getAdm(target);\n        // MWE: should `in` operator be reactive? If not, below code path will be faster / more memory efficient\n        // TODO: check performance stats!\n        // if (adm.values.get(name as string)) return true\n        if (isPropertyKey(name))\n            return adm.has(name);\n        return name in target;\n    },\n    get: function (target, name) {\n        if (name === $mobx || name === \"constructor\" || name === mobxDidRunLazyInitializersSymbol)\n            return target[name];\n        var adm = getAdm(target);\n        var observable = adm.values.get(name);\n        if (observable instanceof Atom) {\n            var result = observable.get();\n            if (result === undefined) {\n                // This fixes #1796, because deleting a prop that has an\n                // undefined value won't retrigger a observer (no visible effect),\n                // the autorun wouldn't subscribe to future key changes (see also next comment)\n                adm.has(name);\n            }\n            return result;\n        }\n        // make sure we start listening to future keys\n        // note that we only do this here for optimization\n        if (isPropertyKey(name))\n            adm.has(name);\n        return target[name];\n    },\n    set: function (target, name, value) {\n        if (!isPropertyKey(name))\n            return false;\n        set(target, name, value);\n        return true;\n    },\n    deleteProperty: function (target, name) {\n        if (!isPropertyKey(name))\n            return false;\n        var adm = getAdm(target);\n        adm.remove(name);\n        return true;\n    },\n    ownKeys: function (target) {\n        var adm = getAdm(target);\n        adm.keysAtom.reportObserved();\n        return Reflect.ownKeys(target);\n    },\n    preventExtensions: function (target) {\n        fail(\"Dynamic observable objects cannot be frozen\");\n        return false;\n    }\n};\nfunction createDynamicObservableObject(base) {\n    var proxy = new Proxy(base, objectProxyTraps);\n    base[$mobx].proxy = proxy;\n    return proxy;\n}\n\nfunction hasInterceptors(interceptable) {\n    return interceptable.interceptors !== undefined && interceptable.interceptors.length > 0;\n}\nfunction registerInterceptor(interceptable, handler) {\n    var interceptors = interceptable.interceptors || (interceptable.interceptors = []);\n    interceptors.push(handler);\n    return once(function () {\n        var idx = interceptors.indexOf(handler);\n        if (idx !== -1)\n            interceptors.splice(idx, 1);\n    });\n}\nfunction interceptChange(interceptable, change) {\n    var prevU = untrackedStart();\n    try {\n        // Interceptor can modify the array, copy it to avoid concurrent modification, see #1950\n        var interceptors = __spread((interceptable.interceptors || []));\n        for (var i = 0, l = interceptors.length; i < l; i++) {\n            change = interceptors[i](change);\n            invariant(!change || change.type, \"Intercept handlers should return nothing or a change object\");\n            if (!change)\n                break;\n        }\n        return change;\n    }\n    finally {\n        untrackedEnd(prevU);\n    }\n}\n\nfunction hasListeners(listenable) {\n    return listenable.changeListeners !== undefined && listenable.changeListeners.length > 0;\n}\nfunction registerListener(listenable, handler) {\n    var listeners = listenable.changeListeners || (listenable.changeListeners = []);\n    listeners.push(handler);\n    return once(function () {\n        var idx = listeners.indexOf(handler);\n        if (idx !== -1)\n            listeners.splice(idx, 1);\n    });\n}\nfunction notifyListeners(listenable, change) {\n    var prevU = untrackedStart();\n    var listeners = listenable.changeListeners;\n    if (!listeners)\n        return;\n    listeners = listeners.slice();\n    for (var i = 0, l = listeners.length; i < l; i++) {\n        listeners[i](change);\n    }\n    untrackedEnd(prevU);\n}\n\nvar MAX_SPLICE_SIZE = 10000; // See e.g. https://github.com/mobxjs/mobx/issues/859\nvar arrayTraps = {\n    get: function (target, name) {\n        if (name === $mobx)\n            return target[$mobx];\n        if (name === \"length\")\n            return target[$mobx].getArrayLength();\n        if (typeof name === \"number\") {\n            return arrayExtensions.get.call(target, name);\n        }\n        if (typeof name === \"string\" && !isNaN(name)) {\n            return arrayExtensions.get.call(target, parseInt(name));\n        }\n        if (arrayExtensions.hasOwnProperty(name)) {\n            return arrayExtensions[name];\n        }\n        return target[name];\n    },\n    set: function (target, name, value) {\n        if (name === \"length\") {\n            target[$mobx].setArrayLength(value);\n        }\n        if (typeof name === \"number\") {\n            arrayExtensions.set.call(target, name, value);\n        }\n        if (typeof name === \"symbol\" || isNaN(name)) {\n            target[name] = value;\n        }\n        else {\n            // numeric string\n            arrayExtensions.set.call(target, parseInt(name), value);\n        }\n        return true;\n    },\n    preventExtensions: function (target) {\n        fail(\"Observable arrays cannot be frozen\");\n        return false;\n    }\n};\nfunction createObservableArray(initialValues, enhancer, name, owned) {\n    if (name === void 0) { name = \"ObservableArray@\" + getNextId(); }\n    if (owned === void 0) { owned = false; }\n    var adm = new ObservableArrayAdministration(name, enhancer, owned);\n    addHiddenFinalProp(adm.values, $mobx, adm);\n    var proxy = new Proxy(adm.values, arrayTraps);\n    adm.proxy = proxy;\n    if (initialValues && initialValues.length) {\n        var prev = allowStateChangesStart(true);\n        adm.spliceWithArray(0, 0, initialValues);\n        allowStateChangesEnd(prev);\n    }\n    return proxy;\n}\nvar ObservableArrayAdministration = /** @class */ (function () {\n    function ObservableArrayAdministration(name, enhancer, owned) {\n        this.owned = owned;\n        this.values = [];\n        this.proxy = undefined;\n        this.lastKnownLength = 0;\n        this.atom = new Atom(name || \"ObservableArray@\" + getNextId());\n        this.enhancer = function (newV, oldV) { return enhancer(newV, oldV, name + \"[..]\"); };\n    }\n    ObservableArrayAdministration.prototype.dehanceValue = function (value) {\n        if (this.dehancer !== undefined)\n            return this.dehancer(value);\n        return value;\n    };\n    ObservableArrayAdministration.prototype.dehanceValues = function (values) {\n        if (this.dehancer !== undefined && values.length > 0)\n            return values.map(this.dehancer);\n        return values;\n    };\n    ObservableArrayAdministration.prototype.intercept = function (handler) {\n        return registerInterceptor(this, handler);\n    };\n    ObservableArrayAdministration.prototype.observe = function (listener, fireImmediately) {\n        if (fireImmediately === void 0) { fireImmediately = false; }\n        if (fireImmediately) {\n            listener({\n                object: this.proxy,\n                type: \"splice\",\n                index: 0,\n                added: this.values.slice(),\n                addedCount: this.values.length,\n                removed: [],\n                removedCount: 0\n            });\n        }\n        return registerListener(this, listener);\n    };\n    ObservableArrayAdministration.prototype.getArrayLength = function () {\n        this.atom.reportObserved();\n        return this.values.length;\n    };\n    ObservableArrayAdministration.prototype.setArrayLength = function (newLength) {\n        if (typeof newLength !== \"number\" || newLength < 0)\n            throw new Error(\"[mobx.array] Out of range: \" + newLength);\n        var currentLength = this.values.length;\n        if (newLength === currentLength)\n            return;\n        else if (newLength > currentLength) {\n            var newItems = new Array(newLength - currentLength);\n            for (var i = 0; i < newLength - currentLength; i++)\n                newItems[i] = undefined; // No Array.fill everywhere...\n            this.spliceWithArray(currentLength, 0, newItems);\n        }\n        else\n            this.spliceWithArray(newLength, currentLength - newLength);\n    };\n    ObservableArrayAdministration.prototype.updateArrayLength = function (oldLength, delta) {\n        if (oldLength !== this.lastKnownLength)\n            throw new Error(\"[mobx] Modification exception: the internal structure of an observable array was changed.\");\n        this.lastKnownLength += delta;\n    };\n    ObservableArrayAdministration.prototype.spliceWithArray = function (index, deleteCount, newItems) {\n        var _this = this;\n        checkIfStateModificationsAreAllowed(this.atom);\n        var length = this.values.length;\n        if (index === undefined)\n            index = 0;\n        else if (index > length)\n            index = length;\n        else if (index < 0)\n            index = Math.max(0, length + index);\n        if (arguments.length === 1)\n            deleteCount = length - index;\n        else if (deleteCount === undefined || deleteCount === null)\n            deleteCount = 0;\n        else\n            deleteCount = Math.max(0, Math.min(deleteCount, length - index));\n        if (newItems === undefined)\n            newItems = EMPTY_ARRAY;\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, {\n                object: this.proxy,\n                type: \"splice\",\n                index: index,\n                removedCount: deleteCount,\n                added: newItems\n            });\n            if (!change)\n                return EMPTY_ARRAY;\n            deleteCount = change.removedCount;\n            newItems = change.added;\n        }\n        newItems = newItems.length === 0 ? newItems : newItems.map(function (v) { return _this.enhancer(v, undefined); });\n        if (process.env.NODE_ENV !== \"production\") {\n            var lengthDelta = newItems.length - deleteCount;\n            this.updateArrayLength(length, lengthDelta); // checks if internal array wasn't modified\n        }\n        var res = this.spliceItemsIntoValues(index, deleteCount, newItems);\n        if (deleteCount !== 0 || newItems.length !== 0)\n            this.notifyArraySplice(index, newItems, res);\n        return this.dehanceValues(res);\n    };\n    ObservableArrayAdministration.prototype.spliceItemsIntoValues = function (index, deleteCount, newItems) {\n        var _a;\n        if (newItems.length < MAX_SPLICE_SIZE) {\n            return (_a = this.values).splice.apply(_a, __spread([index, deleteCount], newItems));\n        }\n        else {\n            var res = this.values.slice(index, index + deleteCount);\n            this.values = this.values\n                .slice(0, index)\n                .concat(newItems, this.values.slice(index + deleteCount));\n            return res;\n        }\n    };\n    ObservableArrayAdministration.prototype.notifyArrayChildUpdate = function (index, newValue, oldValue) {\n        var notifySpy = !this.owned && isSpyEnabled();\n        var notify = hasListeners(this);\n        var change = notify || notifySpy\n            ? {\n                object: this.proxy,\n                type: \"update\",\n                index: index,\n                newValue: newValue,\n                oldValue: oldValue\n            }\n            : null;\n        // The reason why this is on right hand side here (and not above), is this way the uglifier will drop it, but it won't\n        // cause any runtime overhead in development mode without NODE_ENV set, unless spying is enabled\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportStart(__assign(__assign({}, change), { name: this.atom.name }));\n        this.atom.reportChanged();\n        if (notify)\n            notifyListeners(this, change);\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportEnd();\n    };\n    ObservableArrayAdministration.prototype.notifyArraySplice = function (index, added, removed) {\n        var notifySpy = !this.owned && isSpyEnabled();\n        var notify = hasListeners(this);\n        var change = notify || notifySpy\n            ? {\n                object: this.proxy,\n                type: \"splice\",\n                index: index,\n                removed: removed,\n                added: added,\n                removedCount: removed.length,\n                addedCount: added.length\n            }\n            : null;\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportStart(__assign(__assign({}, change), { name: this.atom.name }));\n        this.atom.reportChanged();\n        // conform: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/observe\n        if (notify)\n            notifyListeners(this, change);\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportEnd();\n    };\n    return ObservableArrayAdministration;\n}());\nvar arrayExtensions = {\n    intercept: function (handler) {\n        return this[$mobx].intercept(handler);\n    },\n    observe: function (listener, fireImmediately) {\n        if (fireImmediately === void 0) { fireImmediately = false; }\n        var adm = this[$mobx];\n        return adm.observe(listener, fireImmediately);\n    },\n    clear: function () {\n        return this.splice(0);\n    },\n    replace: function (newItems) {\n        var adm = this[$mobx];\n        return adm.spliceWithArray(0, adm.values.length, newItems);\n    },\n    /**\n     * Converts this array back to a (shallow) javascript structure.\n     * For a deep clone use mobx.toJS\n     */\n    toJS: function () {\n        return this.slice();\n    },\n    toJSON: function () {\n        // Used by JSON.stringify\n        return this.toJS();\n    },\n    /*\n     * functions that do alter the internal structure of the array, (based on lib.es6.d.ts)\n     * since these functions alter the inner structure of the array, the have side effects.\n     * Because the have side effects, they should not be used in computed function,\n     * and for that reason the do not call dependencyState.notifyObserved\n     */\n    splice: function (index, deleteCount) {\n        var newItems = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            newItems[_i - 2] = arguments[_i];\n        }\n        var adm = this[$mobx];\n        switch (arguments.length) {\n            case 0:\n                return [];\n            case 1:\n                return adm.spliceWithArray(index);\n            case 2:\n                return adm.spliceWithArray(index, deleteCount);\n        }\n        return adm.spliceWithArray(index, deleteCount, newItems);\n    },\n    spliceWithArray: function (index, deleteCount, newItems) {\n        var adm = this[$mobx];\n        return adm.spliceWithArray(index, deleteCount, newItems);\n    },\n    push: function () {\n        var items = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            items[_i] = arguments[_i];\n        }\n        var adm = this[$mobx];\n        adm.spliceWithArray(adm.values.length, 0, items);\n        return adm.values.length;\n    },\n    pop: function () {\n        return this.splice(Math.max(this[$mobx].values.length - 1, 0), 1)[0];\n    },\n    shift: function () {\n        return this.splice(0, 1)[0];\n    },\n    unshift: function () {\n        var items = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            items[_i] = arguments[_i];\n        }\n        var adm = this[$mobx];\n        adm.spliceWithArray(0, 0, items);\n        return adm.values.length;\n    },\n    reverse: function () {\n        // reverse by default mutates in place before returning the result\n        // which makes it both a 'derivation' and a 'mutation'.\n        // so we deviate from the default and just make it an dervitation\n        if (process.env.NODE_ENV !== \"production\") {\n            console.warn(\"[mobx] `observableArray.reverse()` will not update the array in place. Use `observableArray.slice().reverse()` to suppress this warning and perform the operation on a copy, or `observableArray.replace(observableArray.slice().reverse())` to reverse & update in place\");\n        }\n        var clone = this.slice();\n        return clone.reverse.apply(clone, arguments);\n    },\n    sort: function (compareFn) {\n        // sort by default mutates in place before returning the result\n        // which goes against all good practices. Let's not change the array in place!\n        if (process.env.NODE_ENV !== \"production\") {\n            console.warn(\"[mobx] `observableArray.sort()` will not update the array in place. Use `observableArray.slice().sort()` to suppress this warning and perform the operation on a copy, or `observableArray.replace(observableArray.slice().sort())` to sort & update in place\");\n        }\n        var clone = this.slice();\n        return clone.sort.apply(clone, arguments);\n    },\n    remove: function (value) {\n        var adm = this[$mobx];\n        var idx = adm.dehanceValues(adm.values).indexOf(value);\n        if (idx > -1) {\n            this.splice(idx, 1);\n            return true;\n        }\n        return false;\n    },\n    get: function (index) {\n        var adm = this[$mobx];\n        if (adm) {\n            if (index < adm.values.length) {\n                adm.atom.reportObserved();\n                return adm.dehanceValue(adm.values[index]);\n            }\n            console.warn(\"[mobx.array] Attempt to read an array index (\" + index + \") that is out of bounds (\" + adm.values.length + \"). Please check length first. Out of bound indices will not be tracked by MobX\");\n        }\n        return undefined;\n    },\n    set: function (index, newValue) {\n        var adm = this[$mobx];\n        var values = adm.values;\n        if (index < values.length) {\n            // update at index in range\n            checkIfStateModificationsAreAllowed(adm.atom);\n            var oldValue = values[index];\n            if (hasInterceptors(adm)) {\n                var change = interceptChange(adm, {\n                    type: \"update\",\n                    object: adm.proxy,\n                    index: index,\n                    newValue: newValue\n                });\n                if (!change)\n                    return;\n                newValue = change.newValue;\n            }\n            newValue = adm.enhancer(newValue, oldValue);\n            var changed = newValue !== oldValue;\n            if (changed) {\n                values[index] = newValue;\n                adm.notifyArrayChildUpdate(index, newValue, oldValue);\n            }\n        }\n        else if (index === values.length) {\n            // add a new item\n            adm.spliceWithArray(index, 0, [newValue]);\n        }\n        else {\n            // out of bounds\n            throw new Error(\"[mobx.array] Index out of bounds, \" + index + \" is larger than \" + values.length);\n        }\n    }\n};\n[\n    \"concat\",\n    \"every\",\n    \"filter\",\n    \"forEach\",\n    \"indexOf\",\n    \"join\",\n    \"lastIndexOf\",\n    \"map\",\n    \"reduce\",\n    \"reduceRight\",\n    \"slice\",\n    \"some\",\n    \"toString\",\n    \"toLocaleString\"\n].forEach(function (funcName) {\n    arrayExtensions[funcName] = function () {\n        var adm = this[$mobx];\n        adm.atom.reportObserved();\n        var res = adm.dehanceValues(adm.values);\n        return res[funcName].apply(res, arguments);\n    };\n});\nvar isObservableArrayAdministration = createInstanceofPredicate(\"ObservableArrayAdministration\", ObservableArrayAdministration);\nfunction isObservableArray(thing) {\n    return isObject(thing) && isObservableArrayAdministration(thing[$mobx]);\n}\n\nvar _a;\nvar ObservableMapMarker = {};\n// just extend Map? See also https://gist.github.com/nestharus/13b4d74f2ef4a2f4357dbd3fc23c1e54\n// But: https://github.com/mobxjs/mobx/issues/1556\nvar ObservableMap = /** @class */ (function () {\n    function ObservableMap(initialData, enhancer, name) {\n        if (enhancer === void 0) { enhancer = deepEnhancer; }\n        if (name === void 0) { name = \"ObservableMap@\" + getNextId(); }\n        this.enhancer = enhancer;\n        this.name = name;\n        this[_a] = ObservableMapMarker;\n        this._keysAtom = createAtom(this.name + \".keys()\");\n        this[Symbol.toStringTag] = \"Map\";\n        if (typeof Map !== \"function\") {\n            throw new Error(\"mobx.map requires Map polyfill for the current browser. Check babel-polyfill or core-js/es6/map.js\");\n        }\n        this._data = new Map();\n        this._hasMap = new Map();\n        this.merge(initialData);\n    }\n    ObservableMap.prototype._has = function (key) {\n        return this._data.has(key);\n    };\n    ObservableMap.prototype.has = function (key) {\n        var _this = this;\n        if (!globalState.trackingDerivation)\n            return this._has(key);\n        var entry = this._hasMap.get(key);\n        if (!entry) {\n            // todo: replace with atom (breaking change)\n            var newEntry = (entry = new ObservableValue(this._has(key), referenceEnhancer, this.name + \".\" + stringifyKey(key) + \"?\", false));\n            this._hasMap.set(key, newEntry);\n            onBecomeUnobserved(newEntry, function () { return _this._hasMap.delete(key); });\n        }\n        return entry.get();\n    };\n    ObservableMap.prototype.set = function (key, value) {\n        var hasKey = this._has(key);\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, {\n                type: hasKey ? \"update\" : \"add\",\n                object: this,\n                newValue: value,\n                name: key\n            });\n            if (!change)\n                return this;\n            value = change.newValue;\n        }\n        if (hasKey) {\n            this._updateValue(key, value);\n        }\n        else {\n            this._addValue(key, value);\n        }\n        return this;\n    };\n    ObservableMap.prototype.delete = function (key) {\n        var _this = this;\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, {\n                type: \"delete\",\n                object: this,\n                name: key\n            });\n            if (!change)\n                return false;\n        }\n        if (this._has(key)) {\n            var notifySpy = isSpyEnabled();\n            var notify = hasListeners(this);\n            var change = notify || notifySpy\n                ? {\n                    type: \"delete\",\n                    object: this,\n                    oldValue: this._data.get(key).value,\n                    name: key\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart(__assign(__assign({}, change), { name: this.name, key: key }));\n            transaction(function () {\n                _this._keysAtom.reportChanged();\n                _this._updateHasMapEntry(key, false);\n                var observable = _this._data.get(key);\n                observable.setNewValue(undefined);\n                _this._data.delete(key);\n            });\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n            return true;\n        }\n        return false;\n    };\n    ObservableMap.prototype._updateHasMapEntry = function (key, value) {\n        var entry = this._hasMap.get(key);\n        if (entry) {\n            entry.setNewValue(value);\n        }\n    };\n    ObservableMap.prototype._updateValue = function (key, newValue) {\n        var observable = this._data.get(key);\n        newValue = observable.prepareNewValue(newValue);\n        if (newValue !== globalState.UNCHANGED) {\n            var notifySpy = isSpyEnabled();\n            var notify = hasListeners(this);\n            var change = notify || notifySpy\n                ? {\n                    type: \"update\",\n                    object: this,\n                    oldValue: observable.value,\n                    name: key,\n                    newValue: newValue\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart(__assign(__assign({}, change), { name: this.name, key: key }));\n            observable.setNewValue(newValue);\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n        }\n    };\n    ObservableMap.prototype._addValue = function (key, newValue) {\n        var _this = this;\n        checkIfStateModificationsAreAllowed(this._keysAtom);\n        transaction(function () {\n            var observable = new ObservableValue(newValue, _this.enhancer, _this.name + \".\" + stringifyKey(key), false);\n            _this._data.set(key, observable);\n            newValue = observable.value; // value might have been changed\n            _this._updateHasMapEntry(key, true);\n            _this._keysAtom.reportChanged();\n        });\n        var notifySpy = isSpyEnabled();\n        var notify = hasListeners(this);\n        var change = notify || notifySpy\n            ? {\n                type: \"add\",\n                object: this,\n                name: key,\n                newValue: newValue\n            }\n            : null;\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportStart(__assign(__assign({}, change), { name: this.name, key: key }));\n        if (notify)\n            notifyListeners(this, change);\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportEnd();\n    };\n    ObservableMap.prototype.get = function (key) {\n        if (this.has(key))\n            return this.dehanceValue(this._data.get(key).get());\n        return this.dehanceValue(undefined);\n    };\n    ObservableMap.prototype.dehanceValue = function (value) {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value);\n        }\n        return value;\n    };\n    ObservableMap.prototype.keys = function () {\n        this._keysAtom.reportObserved();\n        return this._data.keys();\n    };\n    ObservableMap.prototype.values = function () {\n        var self = this;\n        var nextIndex = 0;\n        var keys = Array.from(this.keys());\n        return makeIterable({\n            next: function () {\n                return nextIndex < keys.length\n                    ? { value: self.get(keys[nextIndex++]), done: false }\n                    : { done: true };\n            }\n        });\n    };\n    ObservableMap.prototype.entries = function () {\n        var self = this;\n        var nextIndex = 0;\n        var keys = Array.from(this.keys());\n        return makeIterable({\n            next: function () {\n                if (nextIndex < keys.length) {\n                    var key = keys[nextIndex++];\n                    return {\n                        value: [key, self.get(key)],\n                        done: false\n                    };\n                }\n                return { done: true };\n            }\n        });\n    };\n    ObservableMap.prototype[(_a = $mobx, Symbol.iterator)] = function () {\n        return this.entries();\n    };\n    ObservableMap.prototype.forEach = function (callback, thisArg) {\n        var e_1, _b;\n        try {\n            for (var _c = __values(this), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var _e = __read(_d.value, 2), key = _e[0], value = _e[1];\n                callback.call(thisArg, value, key, this);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /** Merge another object into this object, returns this. */\n    ObservableMap.prototype.merge = function (other) {\n        var _this = this;\n        if (isObservableMap(other)) {\n            other = other.toJS();\n        }\n        transaction(function () {\n            if (isPlainObject(other))\n                getPlainObjectKeys(other).forEach(function (key) { return _this.set(key, other[key]); });\n            else if (Array.isArray(other))\n                other.forEach(function (_b) {\n                    var _c = __read(_b, 2), key = _c[0], value = _c[1];\n                    return _this.set(key, value);\n                });\n            else if (isES6Map(other)) {\n                if (other.constructor !== Map)\n                    fail(\"Cannot initialize from classes that inherit from Map: \" + other.constructor.name); // prettier-ignore\n                other.forEach(function (value, key) { return _this.set(key, value); });\n            }\n            else if (other !== null && other !== undefined)\n                fail(\"Cannot initialize map from \" + other);\n        });\n        return this;\n    };\n    ObservableMap.prototype.clear = function () {\n        var _this = this;\n        transaction(function () {\n            untracked(function () {\n                var e_2, _b;\n                try {\n                    for (var _c = __values(_this.keys()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var key = _d.value;\n                        _this.delete(key);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            });\n        });\n    };\n    ObservableMap.prototype.replace = function (values) {\n        var _this = this;\n        transaction(function () {\n            // grab all the keys that are present in the new map but not present in the current map\n            // and delete them from the map, then merge the new map\n            // this will cause reactions only on changed values\n            var newKeys = getMapLikeKeys(values);\n            var oldKeys = Array.from(_this.keys());\n            var missingKeys = oldKeys.filter(function (k) { return newKeys.indexOf(k) === -1; });\n            missingKeys.forEach(function (k) { return _this.delete(k); });\n            _this.merge(values);\n        });\n        return this;\n    };\n    Object.defineProperty(ObservableMap.prototype, \"size\", {\n        get: function () {\n            this._keysAtom.reportObserved();\n            return this._data.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns a plain object that represents this map.\n     * Note that all the keys being stringified.\n     * If there are duplicating keys after converting them to strings, behaviour is undetermined.\n     */\n    ObservableMap.prototype.toPOJO = function () {\n        var e_3, _b;\n        var res = {};\n        try {\n            for (var _c = __values(this), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var _e = __read(_d.value, 2), key = _e[0], value = _e[1];\n                // We lie about symbol key types due to https://github.com/Microsoft/TypeScript/issues/1863\n                res[typeof key === \"symbol\" ? key : stringifyKey(key)] = value;\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return res;\n    };\n    /**\n     * Returns a shallow non observable object clone of this map.\n     * Note that the values migth still be observable. For a deep clone use mobx.toJS.\n     */\n    ObservableMap.prototype.toJS = function () {\n        return new Map(this);\n    };\n    ObservableMap.prototype.toJSON = function () {\n        // Used by JSON.stringify\n        return this.toPOJO();\n    };\n    ObservableMap.prototype.toString = function () {\n        var _this = this;\n        return (this.name +\n            \"[{ \" +\n            Array.from(this.keys())\n                .map(function (key) { return stringifyKey(key) + \": \" + (\"\" + _this.get(key)); })\n                .join(\", \") +\n            \" }]\");\n    };\n    /**\n     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n     * for callback details\n     */\n    ObservableMap.prototype.observe = function (listener, fireImmediately) {\n        process.env.NODE_ENV !== \"production\" &&\n            invariant(fireImmediately !== true, \"`observe` doesn't support fireImmediately=true in combination with maps.\");\n        return registerListener(this, listener);\n    };\n    ObservableMap.prototype.intercept = function (handler) {\n        return registerInterceptor(this, handler);\n    };\n    return ObservableMap;\n}());\n/* 'var' fixes small-build issue */\nvar isObservableMap = createInstanceofPredicate(\"ObservableMap\", ObservableMap);\n\nvar _a$1;\nvar ObservableSetMarker = {};\nvar ObservableSet = /** @class */ (function () {\n    function ObservableSet(initialData, enhancer, name) {\n        if (enhancer === void 0) { enhancer = deepEnhancer; }\n        if (name === void 0) { name = \"ObservableSet@\" + getNextId(); }\n        this.name = name;\n        this[_a$1] = ObservableSetMarker;\n        this._data = new Set();\n        this._atom = createAtom(this.name);\n        this[Symbol.toStringTag] = \"Set\";\n        if (typeof Set !== \"function\") {\n            throw new Error(\"mobx.set requires Set polyfill for the current browser. Check babel-polyfill or core-js/es6/set.js\");\n        }\n        this.enhancer = function (newV, oldV) { return enhancer(newV, oldV, name); };\n        if (initialData) {\n            this.replace(initialData);\n        }\n    }\n    ObservableSet.prototype.dehanceValue = function (value) {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value);\n        }\n        return value;\n    };\n    ObservableSet.prototype.clear = function () {\n        var _this = this;\n        transaction(function () {\n            untracked(function () {\n                var e_1, _b;\n                try {\n                    for (var _c = __values(_this._data.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var value = _d.value;\n                        _this.delete(value);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            });\n        });\n    };\n    ObservableSet.prototype.forEach = function (callbackFn, thisArg) {\n        var e_2, _b;\n        try {\n            for (var _c = __values(this), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var value = _d.value;\n                callbackFn.call(thisArg, value, value, this);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    Object.defineProperty(ObservableSet.prototype, \"size\", {\n        get: function () {\n            this._atom.reportObserved();\n            return this._data.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ObservableSet.prototype.add = function (value) {\n        var _this = this;\n        checkIfStateModificationsAreAllowed(this._atom);\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, {\n                type: \"add\",\n                object: this,\n                newValue: value\n            });\n            if (!change)\n                return this;\n            // TODO: ideally, value = change.value would be done here, so that values can be\n            // changed by interceptor. Same applies for other Set and Map api's.\n        }\n        if (!this.has(value)) {\n            transaction(function () {\n                _this._data.add(_this.enhancer(value, undefined));\n                _this._atom.reportChanged();\n            });\n            var notifySpy = isSpyEnabled();\n            var notify = hasListeners(this);\n            var change = notify || notifySpy\n                ? {\n                    type: \"add\",\n                    object: this,\n                    newValue: value\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart(change);\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n        }\n        return this;\n    };\n    ObservableSet.prototype.delete = function (value) {\n        var _this = this;\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, {\n                type: \"delete\",\n                object: this,\n                oldValue: value\n            });\n            if (!change)\n                return false;\n        }\n        if (this.has(value)) {\n            var notifySpy = isSpyEnabled();\n            var notify = hasListeners(this);\n            var change = notify || notifySpy\n                ? {\n                    type: \"delete\",\n                    object: this,\n                    oldValue: value\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart(__assign(__assign({}, change), { name: this.name }));\n            transaction(function () {\n                _this._atom.reportChanged();\n                _this._data.delete(value);\n            });\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n            return true;\n        }\n        return false;\n    };\n    ObservableSet.prototype.has = function (value) {\n        this._atom.reportObserved();\n        return this._data.has(this.dehanceValue(value));\n    };\n    ObservableSet.prototype.entries = function () {\n        var nextIndex = 0;\n        var keys = Array.from(this.keys());\n        var values = Array.from(this.values());\n        return makeIterable({\n            next: function () {\n                var index = nextIndex;\n                nextIndex += 1;\n                return index < values.length\n                    ? { value: [keys[index], values[index]], done: false }\n                    : { done: true };\n            }\n        });\n    };\n    ObservableSet.prototype.keys = function () {\n        return this.values();\n    };\n    ObservableSet.prototype.values = function () {\n        this._atom.reportObserved();\n        var self = this;\n        var nextIndex = 0;\n        var observableValues = Array.from(this._data.values());\n        return makeIterable({\n            next: function () {\n                return nextIndex < observableValues.length\n                    ? { value: self.dehanceValue(observableValues[nextIndex++]), done: false }\n                    : { done: true };\n            }\n        });\n    };\n    ObservableSet.prototype.replace = function (other) {\n        var _this = this;\n        if (isObservableSet(other)) {\n            other = other.toJS();\n        }\n        transaction(function () {\n            if (Array.isArray(other)) {\n                _this.clear();\n                other.forEach(function (value) { return _this.add(value); });\n            }\n            else if (isES6Set(other)) {\n                _this.clear();\n                other.forEach(function (value) { return _this.add(value); });\n            }\n            else if (other !== null && other !== undefined) {\n                fail(\"Cannot initialize set from \" + other);\n            }\n        });\n        return this;\n    };\n    ObservableSet.prototype.observe = function (listener, fireImmediately) {\n        // TODO 'fireImmediately' can be true?\n        process.env.NODE_ENV !== \"production\" &&\n            invariant(fireImmediately !== true, \"`observe` doesn't support fireImmediately=true in combination with sets.\");\n        return registerListener(this, listener);\n    };\n    ObservableSet.prototype.intercept = function (handler) {\n        return registerInterceptor(this, handler);\n    };\n    ObservableSet.prototype.toJS = function () {\n        return new Set(this);\n    };\n    ObservableSet.prototype.toString = function () {\n        return this.name + \"[ \" + Array.from(this).join(\", \") + \" ]\";\n    };\n    ObservableSet.prototype[(_a$1 = $mobx, Symbol.iterator)] = function () {\n        return this.values();\n    };\n    return ObservableSet;\n}());\nvar isObservableSet = createInstanceofPredicate(\"ObservableSet\", ObservableSet);\n\nvar ObservableObjectAdministration = /** @class */ (function () {\n    function ObservableObjectAdministration(target, values, name, defaultEnhancer) {\n        if (values === void 0) { values = new Map(); }\n        this.target = target;\n        this.values = values;\n        this.name = name;\n        this.defaultEnhancer = defaultEnhancer;\n        this.keysAtom = new Atom(name + \".keys\");\n    }\n    ObservableObjectAdministration.prototype.read = function (key) {\n        return this.values.get(key).get();\n    };\n    ObservableObjectAdministration.prototype.write = function (key, newValue) {\n        var instance = this.target;\n        var observable = this.values.get(key);\n        if (observable instanceof ComputedValue) {\n            observable.set(newValue);\n            return;\n        }\n        // intercept\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, {\n                type: \"update\",\n                object: this.proxy || instance,\n                name: key,\n                newValue: newValue\n            });\n            if (!change)\n                return;\n            newValue = change.newValue;\n        }\n        newValue = observable.prepareNewValue(newValue);\n        // notify spy & observers\n        if (newValue !== globalState.UNCHANGED) {\n            var notify = hasListeners(this);\n            var notifySpy = isSpyEnabled();\n            var change = notify || notifySpy\n                ? {\n                    type: \"update\",\n                    object: this.proxy || instance,\n                    oldValue: observable.value,\n                    name: key,\n                    newValue: newValue\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart(__assign(__assign({}, change), { name: this.name, key: key }));\n            observable.setNewValue(newValue);\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n        }\n    };\n    ObservableObjectAdministration.prototype.has = function (key) {\n        var map = this.pendingKeys || (this.pendingKeys = new Map());\n        var entry = map.get(key);\n        if (entry)\n            return entry.get();\n        else {\n            var exists = !!this.values.get(key);\n            // Possible optimization: Don't have a separate map for non existing keys,\n            // but store them in the values map instead, using a special symbol to denote \"not existing\"\n            entry = new ObservableValue(exists, referenceEnhancer, this.name + \".\" + stringifyKey(key) + \"?\", false);\n            map.set(key, entry);\n            return entry.get(); // read to subscribe\n        }\n    };\n    ObservableObjectAdministration.prototype.addObservableProp = function (propName, newValue, enhancer) {\n        if (enhancer === void 0) { enhancer = this.defaultEnhancer; }\n        var target = this.target;\n        assertPropertyConfigurable(target, propName);\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, {\n                object: this.proxy || target,\n                name: propName,\n                type: \"add\",\n                newValue: newValue\n            });\n            if (!change)\n                return;\n            newValue = change.newValue;\n        }\n        var observable = new ObservableValue(newValue, enhancer, this.name + \".\" + stringifyKey(propName), false);\n        this.values.set(propName, observable);\n        newValue = observable.value; // observableValue might have changed it\n        Object.defineProperty(target, propName, generateObservablePropConfig(propName));\n        this.notifyPropertyAddition(propName, newValue);\n    };\n    ObservableObjectAdministration.prototype.addComputedProp = function (propertyOwner, // where is the property declared?\n    propName, options) {\n        var target = this.target;\n        options.name = options.name || this.name + \".\" + stringifyKey(propName);\n        this.values.set(propName, new ComputedValue(options));\n        if (propertyOwner === target || isPropertyConfigurable(propertyOwner, propName))\n            Object.defineProperty(propertyOwner, propName, generateComputedPropConfig(propName));\n    };\n    ObservableObjectAdministration.prototype.remove = function (key) {\n        if (!this.values.has(key))\n            return;\n        var target = this.target;\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, {\n                object: this.proxy || target,\n                name: key,\n                type: \"remove\"\n            });\n            if (!change)\n                return;\n        }\n        try {\n            startBatch();\n            var notify = hasListeners(this);\n            var notifySpy = isSpyEnabled();\n            var oldObservable = this.values.get(key);\n            var oldValue = oldObservable && oldObservable.get();\n            oldObservable && oldObservable.set(undefined);\n            // notify key and keyset listeners\n            this.keysAtom.reportChanged();\n            this.values.delete(key);\n            if (this.pendingKeys) {\n                var entry = this.pendingKeys.get(key);\n                if (entry)\n                    entry.set(false);\n            }\n            // delete the prop\n            delete this.target[key];\n            var change = notify || notifySpy\n                ? {\n                    type: \"remove\",\n                    object: this.proxy || target,\n                    oldValue: oldValue,\n                    name: key\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart(__assign(__assign({}, change), { name: this.name, key: key }));\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n        }\n        finally {\n            endBatch();\n        }\n    };\n    ObservableObjectAdministration.prototype.illegalAccess = function (owner, propName) {\n        /**\n         * This happens if a property is accessed through the prototype chain, but the property was\n         * declared directly as own property on the prototype.\n         *\n         * E.g.:\n         * class A {\n         * }\n         * extendObservable(A.prototype, { x: 1 })\n         *\n         * classB extens A {\n         * }\n         * console.log(new B().x)\n         *\n         * It is unclear whether the property should be considered 'static' or inherited.\n         * Either use `console.log(A.x)`\n         * or: decorate(A, { x: observable })\n         *\n         * When using decorate, the property will always be redeclared as own property on the actual instance\n         */\n        console.warn(\"Property '\" + propName + \"' of '\" + owner + \"' was accessed through the prototype chain. Use 'decorate' instead to declare the prop or access it statically through it's owner\");\n    };\n    /**\n     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n     * for callback details\n     */\n    ObservableObjectAdministration.prototype.observe = function (callback, fireImmediately) {\n        process.env.NODE_ENV !== \"production\" &&\n            invariant(fireImmediately !== true, \"`observe` doesn't support the fire immediately property for observable objects.\");\n        return registerListener(this, callback);\n    };\n    ObservableObjectAdministration.prototype.intercept = function (handler) {\n        return registerInterceptor(this, handler);\n    };\n    ObservableObjectAdministration.prototype.notifyPropertyAddition = function (key, newValue) {\n        var notify = hasListeners(this);\n        var notifySpy = isSpyEnabled();\n        var change = notify || notifySpy\n            ? {\n                type: \"add\",\n                object: this.proxy || this.target,\n                name: key,\n                newValue: newValue\n            }\n            : null;\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportStart(__assign(__assign({}, change), { name: this.name, key: key }));\n        if (notify)\n            notifyListeners(this, change);\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportEnd();\n        if (this.pendingKeys) {\n            var entry = this.pendingKeys.get(key);\n            if (entry)\n                entry.set(true);\n        }\n        this.keysAtom.reportChanged();\n    };\n    ObservableObjectAdministration.prototype.getKeys = function () {\n        var e_1, _a;\n        this.keysAtom.reportObserved();\n        // return Reflect.ownKeys(this.values) as any\n        var res = [];\n        try {\n            for (var _b = __values(this.values), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];\n                if (value instanceof ObservableValue)\n                    res.push(key);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    };\n    return ObservableObjectAdministration;\n}());\nfunction asObservableObject(target, name, defaultEnhancer) {\n    if (name === void 0) { name = \"\"; }\n    if (defaultEnhancer === void 0) { defaultEnhancer = deepEnhancer; }\n    if (Object.prototype.hasOwnProperty.call(target, $mobx))\n        return target[$mobx];\n    process.env.NODE_ENV !== \"production\" &&\n        invariant(Object.isExtensible(target), \"Cannot make the designated object observable; it is not extensible\");\n    if (!isPlainObject(target))\n        name = (target.constructor.name || \"ObservableObject\") + \"@\" + getNextId();\n    if (!name)\n        name = \"ObservableObject@\" + getNextId();\n    var adm = new ObservableObjectAdministration(target, new Map(), stringifyKey(name), defaultEnhancer);\n    addHiddenProp(target, $mobx, adm);\n    return adm;\n}\nvar observablePropertyConfigs = Object.create(null);\nvar computedPropertyConfigs = Object.create(null);\nfunction generateObservablePropConfig(propName) {\n    return (observablePropertyConfigs[propName] ||\n        (observablePropertyConfigs[propName] = {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n                return this[$mobx].read(propName);\n            },\n            set: function (v) {\n                this[$mobx].write(propName, v);\n            }\n        }));\n}\nfunction getAdministrationForComputedPropOwner(owner) {\n    var adm = owner[$mobx];\n    if (!adm) {\n        // because computed props are declared on proty,\n        // the current instance might not have been initialized yet\n        initializeInstance(owner);\n        return owner[$mobx];\n    }\n    return adm;\n}\nfunction generateComputedPropConfig(propName) {\n    return (computedPropertyConfigs[propName] ||\n        (computedPropertyConfigs[propName] = {\n            configurable: globalState.computedConfigurable,\n            enumerable: false,\n            get: function () {\n                return getAdministrationForComputedPropOwner(this).read(propName);\n            },\n            set: function (v) {\n                getAdministrationForComputedPropOwner(this).write(propName, v);\n            }\n        }));\n}\nvar isObservableObjectAdministration = createInstanceofPredicate(\"ObservableObjectAdministration\", ObservableObjectAdministration);\nfunction isObservableObject(thing) {\n    if (isObject(thing)) {\n        // Initializers run lazily when transpiling to babel, so make sure they are run...\n        initializeInstance(thing);\n        return isObservableObjectAdministration(thing[$mobx]);\n    }\n    return false;\n}\n\nfunction getAtom(thing, property) {\n    if (typeof thing === \"object\" && thing !== null) {\n        if (isObservableArray(thing)) {\n            if (property !== undefined)\n                fail(process.env.NODE_ENV !== \"production\" &&\n                    \"It is not possible to get index atoms from arrays\");\n            return thing[$mobx].atom;\n        }\n        if (isObservableSet(thing)) {\n            return thing[$mobx];\n        }\n        if (isObservableMap(thing)) {\n            var anyThing = thing;\n            if (property === undefined)\n                return anyThing._keysAtom;\n            var observable = anyThing._data.get(property) || anyThing._hasMap.get(property);\n            if (!observable)\n                fail(process.env.NODE_ENV !== \"production\" &&\n                    \"the entry '\" + property + \"' does not exist in the observable map '\" + getDebugName(thing) + \"'\");\n            return observable;\n        }\n        // Initializers run lazily when transpiling to babel, so make sure they are run...\n        initializeInstance(thing);\n        if (property && !thing[$mobx])\n            thing[property]; // See #1072\n        if (isObservableObject(thing)) {\n            if (!property)\n                return fail(process.env.NODE_ENV !== \"production\" && \"please specify a property\");\n            var observable = thing[$mobx].values.get(property);\n            if (!observable)\n                fail(process.env.NODE_ENV !== \"production\" &&\n                    \"no observable property '\" + property + \"' found on the observable object '\" + getDebugName(thing) + \"'\");\n            return observable;\n        }\n        if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {\n            return thing;\n        }\n    }\n    else if (typeof thing === \"function\") {\n        if (isReaction(thing[$mobx])) {\n            // disposer function\n            return thing[$mobx];\n        }\n    }\n    return fail(process.env.NODE_ENV !== \"production\" && \"Cannot obtain atom from \" + thing);\n}\nfunction getAdministration(thing, property) {\n    if (!thing)\n        fail(\"Expecting some object\");\n    if (property !== undefined)\n        return getAdministration(getAtom(thing, property));\n    if (isAtom(thing) || isComputedValue(thing) || isReaction(thing))\n        return thing;\n    if (isObservableMap(thing) || isObservableSet(thing))\n        return thing;\n    // Initializers run lazily when transpiling to babel, so make sure they are run...\n    initializeInstance(thing);\n    if (thing[$mobx])\n        return thing[$mobx];\n    fail(process.env.NODE_ENV !== \"production\" && \"Cannot obtain administration from \" + thing);\n}\nfunction getDebugName(thing, property) {\n    var named;\n    if (property !== undefined)\n        named = getAtom(thing, property);\n    else if (isObservableObject(thing) || isObservableMap(thing) || isObservableSet(thing))\n        named = getAdministration(thing);\n    else\n        named = getAtom(thing); // valid for arrays as well\n    return named.name;\n}\n\nvar toString = Object.prototype.toString;\nfunction deepEqual(a, b, depth) {\n    if (depth === void 0) { depth = -1; }\n    return eq(a, b, depth);\n}\n// Copied from https://github.com/jashkenas/underscore/blob/5c237a7c682fb68fd5378203f0bf22dce1624854/underscore.js#L1186-L1289\n// Internal recursive comparison function for `isEqual`.\nfunction eq(a, b, depth, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b)\n        return a !== 0 || 1 / a === 1 / b;\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null)\n        return false;\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a)\n        return b !== b;\n    // Exhaust primitive checks\n    var type = typeof a;\n    if (type !== \"function\" && type !== \"object\" && typeof b != \"object\")\n        return false;\n    // Unwrap any wrapped objects.\n    a = unwrap(a);\n    b = unwrap(b);\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b))\n        return false;\n    switch (className) {\n        // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n        case \"[object RegExp]\":\n        // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n        case \"[object String]\":\n            // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n            // equivalent to `new String(\"5\")`.\n            return \"\" + a === \"\" + b;\n        case \"[object Number]\":\n            // `NaN`s are equivalent, but non-reflexive.\n            // Object(NaN) is equivalent to NaN.\n            if (+a !== +a)\n                return +b !== +b;\n            // An `egal` comparison is performed for other numeric values.\n            return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n        case \"[object Date]\":\n        case \"[object Boolean]\":\n            // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n            // millisecond representations. Note that invalid dates with millisecond representations\n            // of `NaN` are not equivalent.\n            return +a === +b;\n        case \"[object Symbol]\":\n            return (typeof Symbol !== \"undefined\" && Symbol.valueOf.call(a) === Symbol.valueOf.call(b));\n    }\n    var areArrays = className === \"[object Array]\";\n    if (!areArrays) {\n        if (typeof a != \"object\" || typeof b != \"object\")\n            return false;\n        // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n        // from different frames are.\n        var aCtor = a.constructor, bCtor = b.constructor;\n        if (aCtor !== bCtor &&\n            !(typeof aCtor === \"function\" &&\n                aCtor instanceof aCtor &&\n                typeof bCtor === \"function\" &&\n                bCtor instanceof bCtor) &&\n            (\"constructor\" in a && \"constructor\" in b)) {\n            return false;\n        }\n    }\n    if (depth === 0) {\n        return false;\n    }\n    else if (depth < 0) {\n        depth = -1;\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n        // Linear search. Performance is inversely proportional to the number of\n        // unique nested structures.\n        if (aStack[length] === a)\n            return bStack[length] === b;\n    }\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n        // Compare array lengths to determine if a deep comparison is necessary.\n        length = a.length;\n        if (length !== b.length)\n            return false;\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (length--) {\n            if (!eq(a[length], b[length], depth - 1, aStack, bStack))\n                return false;\n        }\n    }\n    else {\n        // Deep compare objects.\n        var keys = Object.keys(a);\n        var key = void 0;\n        length = keys.length;\n        // Ensure that both objects contain the same number of properties before comparing deep equality.\n        if (Object.keys(b).length !== length)\n            return false;\n        while (length--) {\n            // Deep compare each member\n            key = keys[length];\n            if (!(has$1(b, key) && eq(a[key], b[key], depth - 1, aStack, bStack)))\n                return false;\n        }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n}\nfunction unwrap(a) {\n    if (isObservableArray(a))\n        return a.slice();\n    if (isES6Map(a) || isObservableMap(a))\n        return Array.from(a.entries());\n    if (isES6Set(a) || isObservableSet(a))\n        return Array.from(a.entries());\n    return a;\n}\nfunction has$1(a, key) {\n    return Object.prototype.hasOwnProperty.call(a, key);\n}\n\nfunction makeIterable(iterator) {\n    iterator[Symbol.iterator] = getSelf;\n    return iterator;\n}\nfunction getSelf() {\n    return this;\n}\n\n/*\nThe only reason for this file to exist is pure horror:\nWithout it rollup can make the bundling fail at any point in time; when it rolls up the files in the wrong order\nit will cause undefined errors (for example because super classes or local variables not being hoisted).\nWith this file that will still happen,\nbut at least in this file we can magically reorder the imports with trial and error until the build succeeds again.\n*/\n\n/**\n * (c) Michel Weststrate 2015 - 2018\n * MIT Licensed\n *\n * Welcome to the mobx sources! To get an global overview of how MobX internally works,\n * this is a good place to start:\n * https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254#.xvbh6qd74\n *\n * Source folders:\n * ===============\n *\n * - api/     Most of the public static methods exposed by the module can be found here.\n * - core/    Implementation of the MobX algorithm; atoms, derivations, reactions, dependency trees, optimizations. Cool stuff can be found here.\n * - types/   All the magic that is need to have observable objects, arrays and values is in this folder. Including the modifiers like `asFlat`.\n * - utils/   Utility stuff.\n *\n */\nif (typeof Proxy === \"undefined\" || typeof Symbol === \"undefined\") {\n    throw new Error(\"[mobx] MobX 5+ requires Proxy and Symbol objects. If your environment doesn't support Symbol or Proxy objects, please downgrade to MobX 4. For React Native Android, consider upgrading JSCore.\");\n}\ntry {\n    // define process.env if needed\n    // if this is not a production build in the first place\n    // (in which case the expression below would be substituted with 'production')\n    process.env.NODE_ENV;\n}\ncatch (e) {\n    var g = getGlobal();\n    if (typeof process === \"undefined\")\n        g.process = {};\n    g.process.env = {};\n}\n(function () {\n    function testCodeMinification() { }\n    if (testCodeMinification.name !== \"testCodeMinification\" &&\n        process.env.NODE_ENV !== \"production\" &&\n        process.env.IGNORE_MOBX_MINIFY_WARNING !== \"true\") {\n        // trick so it doesn't get replaced\n        var varName = [\"process\", \"env\", \"NODE_ENV\"].join(\".\");\n        console.warn(\"[mobx] you are running a minified build, but '\" + varName + \"' was not set to 'production' in your bundler. This results in an unnecessarily large and slow bundle\");\n    }\n})();\nif (typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === \"object\") {\n    // See: https://github.com/andykog/mobx-devtools/\n    __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({\n        spy: spy,\n        extras: {\n            getDebugName: getDebugName\n        },\n        $mobx: $mobx\n    });\n}\n\nexport { $mobx, FlowCancellationError, IDerivationState, ObservableMap, ObservableSet, Reaction, allowStateChanges as _allowStateChanges, allowStateChangesInsideComputed as _allowStateChangesInsideComputed, allowStateReadsEnd as _allowStateReadsEnd, allowStateReadsStart as _allowStateReadsStart, _endAction, getAdministration as _getAdministration, getGlobalState as _getGlobalState, interceptReads as _interceptReads, isComputingDerivation as _isComputingDerivation, resetGlobalState as _resetGlobalState, _startAction, action, autorun, comparer, computed, configure, createAtom, decorate, entries, extendObservable, flow, get, getAtom, getDebugName, getDependencyTree, getObserverTree, has, intercept, isAction, isArrayLike, isObservableValue as isBoxedObservable, isComputed, isComputedProp, isFlowCancellationError, isObservable, isObservableArray, isObservableMap, isObservableObject, isObservableProp, isObservableSet, keys, observable, observe, onBecomeObserved, onBecomeUnobserved, onReactionError, reaction, remove, runInAction, set, spy, toJS, trace, transaction, untracked, values, when };\n","import { spy, observable, computed, getDependencyTree, Reaction, runInAction, transaction, configure } from 'mobx';\nimport React, { useState, useRef, useMemo, useEffect, useCallback, useDebugValue, memo, forwardRef } from 'react';\n\nif (!useState) {\r\n    throw new Error(\"mobx-react-lite requires React with Hooks support\");\r\n}\r\nif (!spy) {\r\n    throw new Error(\"mobx-react-lite requires mobx at least version 4 to be available\");\r\n}\n\nfunction useObservable(initialValue) {\r\n    var observableRef = useRef(null);\r\n    if (!observableRef.current) {\r\n        observableRef.current = observable(initialValue);\r\n    }\r\n    return observableRef.current;\r\n}\n\nfunction useComputed(func, inputs) {\r\n    if (inputs === void 0) { inputs = []; }\r\n    var computed$1 = useMemo(function () { return computed(func); }, inputs);\r\n    return computed$1.get();\r\n}\n\nvar doNothingDisposer = function () {\r\n    // empty\r\n};\r\n/**\r\n * Adds an observable effect (reaction, autorun, or anything else that returns a disposer) that will be registered upon component creation and disposed upon unmounting.\r\n * Returns the generated disposer for early disposal.\r\n *\r\n * @export\r\n * @template D\r\n * @param {() => D} disposerGenerator A function that returns the disposer of the wanted effect.\r\n * @param {ReadonlyArray<any>} [inputs=[]] If you want the effect to be automatically re-created when some variable(s) are changed then pass them in this array.\r\n * @returns {D}\r\n */\r\nfunction useDisposable(disposerGenerator, inputs) {\r\n    if (inputs === void 0) { inputs = []; }\r\n    var disposerRef = useRef(null);\r\n    var earlyDisposedRef = useRef(false);\r\n    useEffect(function () {\r\n        return lazyCreateDisposer(false);\r\n    }, inputs);\r\n    function lazyCreateDisposer(earlyDisposal) {\r\n        // ensure that we won't create a new disposer if it was early disposed\r\n        if (earlyDisposedRef.current) {\r\n            return doNothingDisposer;\r\n        }\r\n        if (!disposerRef.current) {\r\n            var newDisposer = disposerGenerator();\r\n            if (typeof newDisposer !== \"function\") {\r\n                var error = new Error(\"generated disposer must be a function\");\r\n                {\r\n                    // tslint:disable-next-line:no-console\r\n                    console.error(error);\r\n                    return doNothingDisposer;\r\n                }\r\n            }\r\n            disposerRef.current = newDisposer;\r\n        }\r\n        return function () {\r\n            if (disposerRef.current) {\r\n                disposerRef.current();\r\n                disposerRef.current = null;\r\n            }\r\n            if (earlyDisposal) {\r\n                earlyDisposedRef.current = true;\r\n            }\r\n        };\r\n    }\r\n    return lazyCreateDisposer(true);\r\n}\n\nvar globalIsUsingStaticRendering = false;\r\nfunction useStaticRendering(enable) {\r\n    globalIsUsingStaticRendering = enable;\r\n}\r\nfunction isUsingStaticRendering() {\r\n    return globalIsUsingStaticRendering;\r\n}\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\n\nfunction printDebugValue(v) {\r\n    if (!v.current) {\r\n        return \"<unknown>\";\r\n    }\r\n    return getDependencyTree(v.current);\r\n}\n\nvar EMPTY_ARRAY = [];\r\nfunction useUnmount(fn) {\r\n    useEffect(function () { return fn; }, EMPTY_ARRAY);\r\n}\r\nfunction useForceUpdate() {\r\n    var _a = __read(useState(0), 2), setTick = _a[1];\r\n    var update = useCallback(function () {\r\n        setTick(function (tick) { return tick + 1; });\r\n    }, []);\r\n    return update;\r\n}\r\nfunction isPlainObject(value) {\r\n    if (!value || typeof value !== \"object\") {\r\n        return false;\r\n    }\r\n    var proto = Object.getPrototypeOf(value);\r\n    return !proto || proto === Object.prototype;\r\n}\n\nvar EMPTY_OBJECT = {};\r\nfunction useObserver(fn, baseComponentName, options) {\r\n    if (baseComponentName === void 0) { baseComponentName = \"observed\"; }\r\n    if (options === void 0) { options = EMPTY_OBJECT; }\r\n    if (isUsingStaticRendering()) {\r\n        return fn();\r\n    }\r\n    var wantedForceUpdateHook = options.useForceUpdate || useForceUpdate;\r\n    var forceUpdate = wantedForceUpdateHook();\r\n    var reaction = useRef(null);\r\n    if (!reaction.current) {\r\n        reaction.current = new Reaction(\"observer(\" + baseComponentName + \")\", function () {\r\n            forceUpdate();\r\n        });\r\n    }\r\n    var dispose = function () {\r\n        if (reaction.current && !reaction.current.isDisposed) {\r\n            reaction.current.dispose();\r\n            reaction.current = null;\r\n        }\r\n    };\r\n    useDebugValue(reaction, printDebugValue);\r\n    useUnmount(function () {\r\n        dispose();\r\n    });\r\n    // render the original component, but have the\r\n    // reaction track the observables, so that rendering\r\n    // can be invalidated (see above) once a dependency changes\r\n    var rendering;\r\n    var exception;\r\n    reaction.current.track(function () {\r\n        try {\r\n            rendering = fn();\r\n        }\r\n        catch (e) {\r\n            exception = e;\r\n        }\r\n    });\r\n    if (exception) {\r\n        dispose();\r\n        throw exception; // re-throw any exceptions catched during rendering\r\n    }\r\n    return rendering;\r\n}\n\n// n.b. base case is not used for actual typings or exported in the typing files\r\nfunction observer(baseComponent, options) {\r\n    // The working of observer is explained step by step in this talk: https://www.youtube.com/watch?v=cPF4iBedoF0&feature=youtu.be&t=1307\r\n    if (isUsingStaticRendering()) {\r\n        return baseComponent;\r\n    }\r\n    var realOptions = __assign({ forwardRef: false }, options);\r\n    var baseComponentName = baseComponent.displayName || baseComponent.name;\r\n    var wrappedComponent = function (props, ref) {\r\n        return useObserver(function () { return baseComponent(props, ref); }, baseComponentName);\r\n    };\r\n    wrappedComponent.displayName = baseComponentName;\r\n    // memo; we are not intested in deep updates\r\n    // in props; we assume that if deep objects are changed,\r\n    // this is in observables, which would have been tracked anyway\r\n    var memoComponent;\r\n    if (realOptions.forwardRef) {\r\n        // we have to use forwardRef here because:\r\n        // 1. it cannot go before memo, only after it\r\n        // 2. forwardRef converts the function into an actual component, so we can't let the baseComponent do it\r\n        //    since it wouldn't be a callable function anymore\r\n        memoComponent = memo(forwardRef(wrappedComponent));\r\n    }\r\n    else {\r\n        memoComponent = memo(wrappedComponent);\r\n    }\r\n    copyStaticProperties(baseComponent, memoComponent);\r\n    memoComponent.displayName = baseComponentName;\r\n    return memoComponent;\r\n}\r\n// based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\r\nvar hoistBlackList = {\r\n    $$typeof: true,\r\n    render: true,\r\n    compare: true,\r\n    type: true\r\n};\r\nfunction copyStaticProperties(base, target) {\r\n    Object.keys(base).forEach(function (key) {\r\n        if (base.hasOwnProperty(key) && !hoistBlackList[key]) {\r\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key));\r\n        }\r\n    });\r\n}\n\nfunction ObserverComponent(_a) {\r\n    var children = _a.children, render = _a.render;\r\n    var component = children || render;\r\n    if (typeof component !== \"function\") {\r\n        return null;\r\n    }\r\n    return useObserver(component);\r\n}\r\nObserverComponent.propTypes = {\r\n    children: ObserverPropsCheck,\r\n    render: ObserverPropsCheck\r\n};\r\nObserverComponent.displayName = \"Observer\";\r\nfunction ObserverPropsCheck(props, key, componentName, location, propFullName) {\r\n    var extraKey = key === \"children\" ? \"render\" : \"children\";\r\n    var hasProp = typeof props[key] === \"function\";\r\n    var hasExtraProp = typeof props[extraKey] === \"function\";\r\n    if (hasProp && hasExtraProp) {\r\n        return new Error(\"MobX Observer: Do not use children and render in the same time in`\" + componentName);\r\n    }\r\n    if (hasProp || hasExtraProp) {\r\n        return null;\r\n    }\r\n    return new Error(\"Invalid prop `\" +\r\n        propFullName +\r\n        \"` of type `\" +\r\n        typeof props[key] +\r\n        \"` supplied to\" +\r\n        \" `\" +\r\n        componentName +\r\n        \"`, expected `function`.\");\r\n}\n\nfunction useAsObservableSourceInternal(current, usedByLocalStore) {\r\n    if (usedByLocalStore && current === undefined) {\r\n        return undefined;\r\n    }\r\n    var _a = __read(React.useState(function () { return observable(current, {}, { deep: false }); }), 1), res = _a[0];\r\n    runInAction(function () {\r\n        Object.assign(res, current);\r\n    });\r\n    return res;\r\n}\r\nfunction useAsObservableSource(current) {\r\n    return useAsObservableSourceInternal(current, false);\r\n}\n\nfunction useLocalStore(initializer, current) {\r\n    var source = useAsObservableSourceInternal(current, true);\r\n    return React.useState(function () {\r\n        var local = observable(initializer(source));\r\n        if (isPlainObject(local)) {\r\n            runInAction(function () {\r\n                Object.keys(local).forEach(function (key) {\r\n                    var value = local[key];\r\n                    if (typeof value === \"function\") {\r\n                        // @ts-ignore No idea why ts2536 is popping out here\r\n                        local[key] = wrapInTransaction(value, local);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        return local;\r\n    })[0];\r\n}\r\n// tslint:disable-next-line: ban-types\r\nfunction wrapInTransaction(fn, context) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return transaction(function () { return fn.apply(context, args); });\r\n    };\r\n}\n\nvar optimizeScheduler = function (reactionScheduler) {\r\n    if (typeof reactionScheduler === \"function\") {\r\n        configure({ reactionScheduler: reactionScheduler });\r\n    }\r\n};\n\nexport { ObserverComponent as Observer, isUsingStaticRendering, observer, optimizeScheduler, useAsObservableSource, useComputed, useDisposable, useForceUpdate, useLocalStore, useObservable, useObserver, useStaticRendering };\n","let symbolId = 0\nfunction createSymbol(name) {\n    if (typeof Symbol === \"function\") {\n        return Symbol(name)\n    }\n    const symbol = `__$mobx-react ${name} (${symbolId})`\n    symbolId++\n    return symbol\n}\n\nconst createdSymbols = {}\nexport function newSymbol(name) {\n    if (!createdSymbols[name]) {\n        createdSymbols[name] = createSymbol(name)\n    }\n    return createdSymbols[name]\n}\n\nexport function shallowEqual(objA, objB) {\n    //From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n    if (is(objA, objB)) return true\n    if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n        return false\n    }\n    const keysA = Object.keys(objA)\n    const keysB = Object.keys(objB)\n    if (keysA.length !== keysB.length) return false\n    for (let i = 0; i < keysA.length; i++) {\n        if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n            return false\n        }\n    }\n    return true\n}\n\nfunction is(x, y) {\n    // From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n    if (x === y) {\n        return x !== 0 || 1 / x === 1 / y\n    } else {\n        return x !== x && y !== y\n    }\n}\n\n// based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\nconst hoistBlackList = {\n    $$typeof: 1,\n    render: 1,\n    compare: 1,\n    type: 1,\n    childContextTypes: 1,\n    contextType: 1,\n    contextTypes: 1,\n    defaultProps: 1,\n    getDefaultProps: 1,\n    getDerivedStateFromError: 1,\n    getDerivedStateFromProps: 1,\n    mixins: 1,\n    propTypes: 1\n}\n\nexport function copyStaticProperties(base, target) {\n    const protoProps = Object.getOwnPropertyNames(Object.getPrototypeOf(base))\n    Object.getOwnPropertyNames(base).forEach(key => {\n        if (!hoistBlackList[key] && protoProps.indexOf(key) === -1) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key))\n        }\n    })\n}\n\n/**\n * Helper to set `prop` to `this` as non-enumerable (hidden prop)\n * @param target\n * @param prop\n * @param value\n */\nexport function setHiddenProp(target, prop, value) {\n    if (!Object.hasOwnProperty.call(target, prop)) {\n        Object.defineProperty(target, prop, {\n            enumerable: false,\n            configurable: true,\n            writable: true,\n            value\n        })\n    } else {\n        target[prop] = value\n    }\n}\n\n/**\n * Utilities for patching componentWillUnmount, to make sure @disposeOnUnmount works correctly icm with user defined hooks\n * and the handler provided by mobx-react\n */\nconst mobxMixins = newSymbol(\"patchMixins\")\nconst mobxPatchedDefinition = newSymbol(\"patchedDefinition\")\n\nfunction getMixins(target, methodName) {\n    const mixins = (target[mobxMixins] = target[mobxMixins] || {})\n    const methodMixins = (mixins[methodName] = mixins[methodName] || {})\n    methodMixins.locks = methodMixins.locks || 0\n    methodMixins.methods = methodMixins.methods || []\n    return methodMixins\n}\n\nfunction wrapper(realMethod, mixins, ...args) {\n    // locks are used to ensure that mixins are invoked only once per invocation, even on recursive calls\n    mixins.locks++\n\n    try {\n        let retVal\n        if (realMethod !== undefined && realMethod !== null) {\n            retVal = realMethod.apply(this, args)\n        }\n\n        return retVal\n    } finally {\n        mixins.locks--\n        if (mixins.locks === 0) {\n            mixins.methods.forEach(mx => {\n                mx.apply(this, args)\n            })\n        }\n    }\n}\n\nfunction wrapFunction(realMethod, mixins) {\n    const fn = function(...args) {\n        wrapper.call(this, realMethod, mixins, ...args)\n    }\n    return fn\n}\n\nexport function patch(target, methodName, mixinMethod) {\n    const mixins = getMixins(target, methodName)\n\n    if (mixins.methods.indexOf(mixinMethod) < 0) {\n        mixins.methods.push(mixinMethod)\n    }\n\n    const oldDefinition = Object.getOwnPropertyDescriptor(target, methodName)\n    if (oldDefinition && oldDefinition[mobxPatchedDefinition]) {\n        // already patched definition, do not repatch\n        return\n    }\n\n    const originalMethod = target[methodName]\n    const newDefinition = createDefinition(\n        target,\n        methodName,\n        oldDefinition ? oldDefinition.enumerable : undefined,\n        mixins,\n        originalMethod\n    )\n\n    Object.defineProperty(target, methodName, newDefinition)\n}\n\nfunction createDefinition(target, methodName, enumerable, mixins, originalMethod) {\n    let wrappedFunc = wrapFunction(originalMethod, mixins)\n\n    return {\n        [mobxPatchedDefinition]: true,\n        get: function() {\n            return wrappedFunc\n        },\n        set: function(value) {\n            if (this === target) {\n                wrappedFunc = wrapFunction(value, mixins)\n            } else {\n                // when it is an instance of the prototype/a child prototype patch that particular case again separately\n                // since we need to store separate values depending on wether it is the actual instance, the prototype, etc\n                // e.g. the method for super might not be the same as the method for the prototype which might be not the same\n                // as the method for the instance\n                const newDefinition = createDefinition(this, methodName, enumerable, mixins, value)\n                Object.defineProperty(this, methodName, newDefinition)\n            }\n        },\n        configurable: true,\n        enumerable: enumerable\n    }\n}\n","import { PureComponent, Component } from \"react\"\nimport { createAtom, _allowStateChanges, Reaction, $mobx } from \"mobx\"\nimport { isUsingStaticRendering } from \"mobx-react-lite\"\n\nimport { newSymbol, shallowEqual, setHiddenProp, patch } from \"./utils/utils\"\n\nconst mobxAdminProperty = $mobx || \"$mobx\"\nconst mobxIsUnmounted = newSymbol(\"isUnmounted\")\nconst skipRenderKey = newSymbol(\"skipRender\")\nconst isForcingUpdateKey = newSymbol(\"isForcingUpdate\")\n\nexport function makeClassComponentObserver(componentClass) {\n    const target = componentClass.prototype\n    if (target.componentWillReact)\n        throw new Error(\"The componentWillReact life-cycle event is no longer supported\")\n    if (componentClass.__proto__ !== PureComponent) {\n        if (!target.shouldComponentUpdate) target.shouldComponentUpdate = observerSCU\n        else if (target.shouldComponentUpdate !== observerSCU)\n            // n.b. unequal check, instead of existence check, as @observer might be on superclass as well\n            throw new Error(\n                \"It is not allowed to use shouldComponentUpdate in observer based components.\"\n            )\n    }\n\n    // this.props and this.state are made observable, just to make sure @computed fields that\n    // are defined inside the component, and which rely on state or props, re-compute if state or props change\n    // (otherwise the computed wouldn't update and become stale on props change, since props are not observable)\n    // However, this solution is not without it's own problems: https://github.com/mobxjs/mobx-react/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3Aobservable-props-or-not+\n    makeObservableProp(target, \"props\")\n    makeObservableProp(target, \"state\")\n\n    const baseRender = target.render\n    target.render = function() {\n        return makeComponentReactive.call(this, baseRender)\n    }\n    patch(target, \"componentWillUnmount\", function() {\n        if (isUsingStaticRendering() === true) return\n        this.render[mobxAdminProperty] && this.render[mobxAdminProperty].dispose()\n        this[mobxIsUnmounted] = true\n    })\n    return componentClass\n}\n\nfunction makeComponentReactive(render) {\n    if (isUsingStaticRendering() === true) return render.call(this)\n\n    /**\n     * If props are shallowly modified, react will render anyway,\n     * so atom.reportChanged() should not result in yet another re-render\n     */\n    setHiddenProp(this, skipRenderKey, false)\n    /**\n     * forceUpdate will re-assign this.props. We don't want that to cause a loop,\n     * so detect these changes\n     */\n    setHiddenProp(this, isForcingUpdateKey, false)\n\n    // Generate friendly name for debugging\n    const initialName =\n        this.displayName ||\n        this.name ||\n        (this.constructor && (this.constructor.displayName || this.constructor.name)) ||\n        \"<component>\"\n    const baseRender = render.bind(this)\n\n    let isRenderingPending = false\n\n    const reaction = new Reaction(`${initialName}.render()`, () => {\n        if (!isRenderingPending) {\n            // N.B. Getting here *before mounting* means that a component constructor has side effects (see the relevant test in misc.js)\n            // This unidiomatic React usage but React will correctly warn about this so we continue as usual\n            // See #85 / Pull #44\n            isRenderingPending = true\n            if (this[mobxIsUnmounted] !== true) {\n                let hasError = true\n                try {\n                    setHiddenProp(this, isForcingUpdateKey, true)\n                    if (!this[skipRenderKey]) Component.prototype.forceUpdate.call(this)\n                    hasError = false\n                } finally {\n                    setHiddenProp(this, isForcingUpdateKey, false)\n                    if (hasError) reaction.dispose()\n                }\n            }\n        }\n    })\n    reaction.reactComponent = this\n    reactiveRender[mobxAdminProperty] = reaction\n    this.render = reactiveRender\n\n    function reactiveRender() {\n        isRenderingPending = false\n        let exception = undefined\n        let rendering = undefined\n        reaction.track(() => {\n            try {\n                rendering = _allowStateChanges(false, baseRender)\n            } catch (e) {\n                exception = e\n            }\n        })\n        if (exception) {\n            throw exception\n        }\n        return rendering\n    }\n\n    return reactiveRender.call(this)\n}\n\nfunction observerSCU(nextProps, nextState) {\n    if (isUsingStaticRendering()) {\n        console.warn(\n            \"[mobx-react] It seems that a re-rendering of a React component is triggered while in static (server-side) mode. Please make sure components are rendered only once server-side.\"\n        )\n    }\n    // update on any state changes (as is the default)\n    if (this.state !== nextState) {\n        return true\n    }\n    // update if props are shallowly not equal, inspired by PureRenderMixin\n    // we could return just 'false' here, and avoid the `skipRender` checks etc\n    // however, it is nicer if lifecycle events are triggered like usually,\n    // so we return true here if props are shallowly modified.\n    return !shallowEqual(this.props, nextProps)\n}\n\nfunction makeObservableProp(target, propName) {\n    const valueHolderKey = newSymbol(`reactProp_${propName}_valueHolder`)\n    const atomHolderKey = newSymbol(`reactProp_${propName}_atomHolder`)\n    function getAtom() {\n        if (!this[atomHolderKey]) {\n            setHiddenProp(this, atomHolderKey, createAtom(\"reactive \" + propName))\n        }\n        return this[atomHolderKey]\n    }\n    Object.defineProperty(target, propName, {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            getAtom.call(this).reportObserved()\n            return this[valueHolderKey]\n        },\n        set: function set(v) {\n            if (!this[isForcingUpdateKey] && !shallowEqual(this[valueHolderKey], v)) {\n                setHiddenProp(this, valueHolderKey, v)\n                setHiddenProp(this, skipRenderKey, true)\n                getAtom.call(this).reportChanged()\n                setHiddenProp(this, skipRenderKey, false)\n            } else {\n                setHiddenProp(this, valueHolderKey, v)\n            }\n        }\n    })\n}\n","/* eslint-disable react/display-name */\nimport React, { Component, forwardRef, memo } from \"react\"\nimport { observer as observerLite, Observer } from \"mobx-react-lite\"\n\nimport { makeClassComponentObserver } from \"./observerClass\"\n\nconst hasSymbol = typeof Symbol === \"function\" && Symbol.for\n\n// Using react-is had some issues (and operates on elements, not on types), see #608 / #609\nconst ReactForwardRefSymbol = hasSymbol\n    ? Symbol.for(\"react.forward_ref\")\n    : typeof forwardRef === \"function\" && forwardRef(() => {})[\"$$typeof\"]\n\nconst ReactMemoSymbol = hasSymbol\n    ? Symbol.for(\"react.memo\")\n    : typeof memo === \"function\" && memo(() => {})[\"$$typeof\"]\n\n/**\n * Observer function / decorator\n */\nexport function observer(componentClass) {\n    if (componentClass.isMobxInjector === true) {\n        console.warn(\n            \"Mobx observer: You are trying to use 'observer' on a component that already has 'inject'. Please apply 'observer' before applying 'inject'\"\n        )\n    }\n\n    if (ReactMemoSymbol && componentClass[\"$$typeof\"] === ReactMemoSymbol) {\n        throw new Error(\n            \"Mobx observer: You are trying to use 'observer' on function component wrapped to either another observer or 'React.memo'. The observer already applies 'React.memo' for you.\"\n        )\n    }\n\n    // Unwrap forward refs into `<Observer>` component\n    // we need to unwrap the render, because it is the inner render that needs to be tracked,\n    // not the ForwardRef HoC\n    if (ReactForwardRefSymbol && componentClass[\"$$typeof\"] === ReactForwardRefSymbol) {\n        const baseRender = componentClass.render\n        if (typeof baseRender !== \"function\")\n            throw new Error(\"render property of ForwardRef was not a function\")\n        return forwardRef(function ObserverForwardRef() {\n            return <Observer>{() => baseRender.apply(undefined, arguments)}</Observer>\n        })\n    }\n\n    // Function component\n    if (\n        typeof componentClass === \"function\" &&\n        (!componentClass.prototype || !componentClass.prototype.render) &&\n        !componentClass.isReactClass &&\n        !Object.prototype.isPrototypeOf.call(Component, componentClass)\n    ) {\n        return observerLite(componentClass)\n    }\n\n    return makeClassComponentObserver(componentClass)\n}\n","/* eslint-disable react/prop-types */\nimport React from \"react\"\nimport { shallowEqual } from \"./utils/utils\"\n\nexport const MobXProviderContext = React.createContext({})\n\nexport function Provider({ children, ...stores }) {\n    const parentValue = React.useContext(MobXProviderContext)\n    const value = React.useRef({\n        ...parentValue,\n        ...stores\n    }).current\n\n    if (process.env.NODE_ENV !== \"production\") {\n        const newValue = { ...value, ...stores } // spread in previous state for the context based stores\n        if (!shallowEqual(value, newValue)) {\n            throw new Error(\n                \"MobX Provider: The set of provided stores has changed. See: https://github.com/mobxjs/mobx-react#the-set-of-provided-stores-has-changed-error.\"\n            )\n        }\n    }\n\n    return <MobXProviderContext.Provider value={value}>{children}</MobXProviderContext.Provider>\n}\n\nProvider.displayName = \"MobXProvider\"\n","import * as React from \"react\"\nimport { patch, newSymbol } from \"./utils/utils\"\n\nconst protoStoreKey = newSymbol(\"disposeOnUnmountProto\")\nconst instStoreKey = newSymbol(\"disposeOnUnmountInst\")\n\nfunction runDisposersOnWillUnmount() {\n    ;[...(this[protoStoreKey] || []), ...(this[instStoreKey] || [])].forEach(propKeyOrFunction => {\n        const prop =\n            typeof propKeyOrFunction === \"string\" ? this[propKeyOrFunction] : propKeyOrFunction\n        if (prop !== undefined && prop !== null) {\n            if (Array.isArray(prop)) prop.map(f => f())\n            else prop()\n        }\n    })\n}\n\nexport function disposeOnUnmount(target, propertyKeyOrFunction) {\n    if (Array.isArray(propertyKeyOrFunction)) {\n        return propertyKeyOrFunction.map(fn => disposeOnUnmount(target, fn))\n    }\n\n    const c = Object.getPrototypeOf(target).constructor || Object.getPrototypeOf(target.constructor)\n    const c2 = Object.getPrototypeOf(target.constructor)\n    if (\n        !(\n            c === React.Component ||\n            c === React.PureComponent ||\n            c2 === React.Component ||\n            c2 === React.PureComponent\n        )\n    ) {\n        throw new Error(\n            \"[mobx-react] disposeOnUnmount only supports direct subclasses of React.Component or React.PureComponent.\"\n        )\n    }\n\n    if (\n        typeof propertyKeyOrFunction !== \"string\" &&\n        typeof propertyKeyOrFunction !== \"function\" &&\n        !Array.isArray(propertyKeyOrFunction)\n    ) {\n        throw new Error(\n            \"[mobx-react] disposeOnUnmount only works if the parameter is either a property key or a function.\"\n        )\n    }\n\n    // decorator's target is the prototype, so it doesn't have any instance properties like props\n    const isDecorator = typeof propertyKeyOrFunction === \"string\"\n\n    // add property key / function we want run (disposed) to the store\n    const componentWasAlreadyModified = !!target[protoStoreKey] || !!target[instStoreKey]\n    const store = isDecorator\n        ? // decorators are added to the prototype store\n          target[protoStoreKey] || (target[protoStoreKey] = [])\n        : // functions are added to the instance store\n          target[instStoreKey] || (target[instStoreKey] = [])\n\n    store.push(propertyKeyOrFunction)\n\n    // tweak the component class componentWillUnmount if not done already\n    if (!componentWasAlreadyModified) {\n        patch(target, \"componentWillUnmount\", runDisposersOnWillUnmount)\n    }\n\n    // return the disposer as is if invoked as a non decorator\n    if (typeof propertyKeyOrFunction !== \"string\") {\n        return propertyKeyOrFunction\n    }\n}\n","import { isObservableArray, isObservableObject, isObservableMap, untracked } from \"mobx\"\n\n// Copied from React.PropTypes\nfunction createChainableTypeChecker(validate) {\n    function checkType(\n        isRequired,\n        props,\n        propName,\n        componentName,\n        location,\n        propFullName,\n        ...rest\n    ) {\n        return untracked(() => {\n            componentName = componentName || \"<<anonymous>>\"\n            propFullName = propFullName || propName\n            if (props[propName] == null) {\n                if (isRequired) {\n                    const actual = props[propName] === null ? \"null\" : \"undefined\"\n                    return new Error(\n                        \"The \" +\n                            location +\n                            \" `\" +\n                            propFullName +\n                            \"` is marked as required \" +\n                            \"in `\" +\n                            componentName +\n                            \"`, but its value is `\" +\n                            actual +\n                            \"`.\"\n                    )\n                }\n                return null\n            } else {\n                return validate(props, propName, componentName, location, propFullName, ...rest)\n            }\n        })\n    }\n\n    const chainedCheckType = checkType.bind(null, false)\n    chainedCheckType.isRequired = checkType.bind(null, true)\n    return chainedCheckType\n}\n\n// Copied from React.PropTypes\nfunction isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === \"symbol\") {\n        return true\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue[\"@@toStringTag\"] === \"Symbol\") {\n        return true\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === \"function\" && propValue instanceof Symbol) {\n        return true\n    }\n\n    return false\n}\n\n// Copied from React.PropTypes\nfunction getPropType(propValue) {\n    const propType = typeof propValue\n    if (Array.isArray(propValue)) {\n        return \"array\"\n    }\n    if (propValue instanceof RegExp) {\n        // Old webkits (at least until Android 4.0) return 'function' rather than\n        // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n        // passes PropTypes.object.\n        return \"object\"\n    }\n    if (isSymbol(propType, propValue)) {\n        return \"symbol\"\n    }\n    return propType\n}\n\n// This handles more types than `getPropType`. Only used for error messages.\n// Copied from React.PropTypes\nfunction getPreciseType(propValue) {\n    const propType = getPropType(propValue)\n    if (propType === \"object\") {\n        if (propValue instanceof Date) {\n            return \"date\"\n        } else if (propValue instanceof RegExp) {\n            return \"regexp\"\n        }\n    }\n    return propType\n}\n\nfunction createObservableTypeCheckerCreator(allowNativeType, mobxType) {\n    return createChainableTypeChecker(function(\n        props,\n        propName,\n        componentName,\n        location,\n        propFullName\n    ) {\n        return untracked(() => {\n            if (allowNativeType) {\n                if (getPropType(props[propName]) === mobxType.toLowerCase()) return null\n            }\n            let mobxChecker\n            switch (mobxType) {\n                case \"Array\":\n                    mobxChecker = isObservableArray\n                    break\n                case \"Object\":\n                    mobxChecker = isObservableObject\n                    break\n                case \"Map\":\n                    mobxChecker = isObservableMap\n                    break\n                default:\n                    throw new Error(`Unexpected mobxType: ${mobxType}`)\n            }\n            const propValue = props[propName]\n            if (!mobxChecker(propValue)) {\n                const preciseType = getPreciseType(propValue)\n                const nativeTypeExpectationMessage = allowNativeType\n                    ? \" or javascript `\" + mobxType.toLowerCase() + \"`\"\n                    : \"\"\n                return new Error(\n                    \"Invalid prop `\" +\n                        propFullName +\n                        \"` of type `\" +\n                        preciseType +\n                        \"` supplied to\" +\n                        \" `\" +\n                        componentName +\n                        \"`, expected `mobx.Observable\" +\n                        mobxType +\n                        \"`\" +\n                        nativeTypeExpectationMessage +\n                        \".\"\n                )\n            }\n            return null\n        })\n    })\n}\n\nfunction createObservableArrayOfTypeChecker(allowNativeType, typeChecker) {\n    return createChainableTypeChecker(function(\n        props,\n        propName,\n        componentName,\n        location,\n        propFullName,\n        ...rest\n    ) {\n        return untracked(() => {\n            if (typeof typeChecker !== \"function\") {\n                return new Error(\n                    \"Property `\" +\n                        propFullName +\n                        \"` of component `\" +\n                        componentName +\n                        \"` has \" +\n                        \"invalid PropType notation.\"\n                )\n            }\n            let error = createObservableTypeCheckerCreator(allowNativeType, \"Array\")(\n                props,\n                propName,\n                componentName\n            )\n            if (error instanceof Error) return error\n            const propValue = props[propName]\n            for (let i = 0; i < propValue.length; i++) {\n                error = typeChecker(\n                    propValue,\n                    i,\n                    componentName,\n                    location,\n                    propFullName + \"[\" + i + \"]\",\n                    ...rest\n                )\n                if (error instanceof Error) return error\n            }\n            return null\n        })\n    })\n}\n\nconst observableArray = createObservableTypeCheckerCreator(false, \"Array\")\nconst observableArrayOf = createObservableArrayOfTypeChecker.bind(null, false)\nconst observableMap = createObservableTypeCheckerCreator(false, \"Map\")\nconst observableObject = createObservableTypeCheckerCreator(false, \"Object\")\nconst arrayOrObservableArray = createObservableTypeCheckerCreator(true, \"Array\")\nconst arrayOrObservableArrayOf = createObservableArrayOfTypeChecker.bind(null, true)\nconst objectOrObservableObject = createObservableTypeCheckerCreator(true, \"Object\")\n\nexport const PropTypes = {\n    observableArray,\n    observableArrayOf,\n    observableMap,\n    observableObject,\n    arrayOrObservableArray,\n    arrayOrObservableArrayOf,\n    objectOrObservableObject\n}\n","import { observable, configure } from \"mobx\"\nimport { Component } from \"react\"\nimport { unstable_batchedUpdates as rdBatched } from \"react-dom\"\n\nif (!Component) throw new Error(\"mobx-react requires React to be available\")\nif (!observable) throw new Error(\"mobx-react requires mobx to be available\")\n\nif (typeof rdBatched === \"function\") configure({ reactionScheduler: rdBatched })\n\nexport {\n    Observer,\n    useObserver,\n    useAsObservableSource,\n    useLocalStore,\n    isUsingStaticRendering,\n    useStaticRendering\n} from \"mobx-react-lite\"\n\nexport { observer } from \"./observer\"\n\nexport { Provider, MobXProviderContext } from \"./Provider\"\nexport { inject } from \"./inject\"\nexport { disposeOnUnmount } from \"./disposeOnUnmount\"\nexport { PropTypes } from \"./propTypes\"\n","'use strict';\n\nrequire('../../style/css');\n\nrequire('./index.css');","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar WhiteSpace = function (_React$Component) {\n    (0, _inherits3['default'])(WhiteSpace, _React$Component);\n\n    function WhiteSpace() {\n        (0, _classCallCheck3['default'])(this, WhiteSpace);\n        return (0, _possibleConstructorReturn3['default'])(this, (WhiteSpace.__proto__ || Object.getPrototypeOf(WhiteSpace)).apply(this, arguments));\n    }\n\n    (0, _createClass3['default'])(WhiteSpace, [{\n        key: 'render',\n        value: function render() {\n            var _props = this.props,\n                prefixCls = _props.prefixCls,\n                size = _props.size,\n                className = _props.className,\n                style = _props.style,\n                onClick = _props.onClick;\n\n            var wrapCls = (0, _classnames2['default'])(prefixCls, prefixCls + '-' + size, className);\n            return React.createElement('div', { className: wrapCls, style: style, onClick: onClick });\n        }\n    }]);\n    return WhiteSpace;\n}(React.Component);\n\nexports['default'] = WhiteSpace;\n\nWhiteSpace.defaultProps = {\n    prefixCls: 'am-whitespace',\n    size: 'md'\n};\nmodule.exports = exports['default'];","export default function _initializerDefineProperty(target, property, descriptor, context) {\n  if (!descriptor) return;\n  Object.defineProperty(target, property, {\n    enumerable: descriptor.enumerable,\n    configurable: descriptor.configurable,\n    writable: descriptor.writable,\n    value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n  });\n}","export default function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object.keys(descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object.defineProperty(target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}